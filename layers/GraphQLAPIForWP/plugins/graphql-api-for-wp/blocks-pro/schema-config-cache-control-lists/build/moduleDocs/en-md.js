(window.webpackJsonpGraphQLAPIProSchemaConfigCacheControlLists=window.webpackJsonpGraphQLAPIProSchemaConfigCacheControlLists||[]).push([[1],{45:function(e,o){e.exports='<h1 id="cache-control">Cache Control</h1> <p>Because it sends the queries via <code>POST</code>, GraphQL is normally not cacheable on the server-side or intermediate stages between the client and the server, such as a CDN.</p> <p>However, persisted queries can be accessed via <code>GET</code>, hence their response can be cached via the <code>Cache-Control</code> header.</p> <h2 id="description">Description</h2> <p>The <code>Cache-Control</code> header indicates for how long the response is to be cached through its <code>max-age</code> value.</p> <p>The GraphQL API PRO plugin offers Cache Control Lists, where custom <code>max-age</code> values are defined for fields and directives. Hence, different queries containing different combinations of fields and directives will produce a different <code>max-age</code> value.</p> <p>The response&#39;s <code>max-age</code> value is calculated as the lowest value from all the fields and directives in the requested query, or <code>no-store</code> if either:</p> <ul> <li>any field or directive has <code>max-age</code> with value <code>0</code></li> <li>an Access Control rule must check the user state for any field or directive (in which case, the response is specific to the user, so it cannot be cached)</li> </ul> <p><img src="https://raw.githubusercontent.com/leoloso/PoP/master/layers/GraphQLAPIForWP/plugins/graphql-api-for-wp/docs-pro/modules/cache-control/../../images/cache-control.gif" alt="Defining a cache control policy" title="Defining a cache control policy"></p> <h2 id="using-a-cache-control-list-ccl">Using a Cache Control List (CCL)</h2> <p>After creating the CCL (see next section), we can have the Persisted Query use it by editing the corresponding Schema Configuration, and selecting the CCL from the list under block &quot;Cache Control Lists&quot;.</p> <p><img src="https://raw.githubusercontent.com/leoloso/PoP/master/layers/GraphQLAPIForWP/plugins/graphql-api-for-wp/docs-pro/modules/cache-control/../../images/schema-config-cache-control-lists.png" alt="Selecting a Cache Control List in the Schema Configuration" title="Selecting a Cache Control List in the Schema Configuration"></p> <h2 id="creating-a-cache-control-list">Creating a Cache Control List</h2> <p>Click on the &quot;Cache Control Lists&quot; page in the GraphQL API menu, and then click on &quot;Add New Cache Control List&quot;.</p> <p><img src="https://raw.githubusercontent.com/leoloso/PoP/master/layers/GraphQLAPIForWP/plugins/graphql-api-for-wp/docs-pro/modules/cache-control/../../images/cache-control-lists.png" alt="Cache Control Lists" title="Cache Control Lists"></p> <p>Every Cache Control List contains one or many entries, each of them with the following elements:</p> <ul> <li>The fields and directives which, if they appear on the GraphQL query, the selected max-age takes effect</li> <li>The max-age</li> </ul> <p><img src="https://raw.githubusercontent.com/leoloso/PoP/master/layers/GraphQLAPIForWP/plugins/graphql-api-for-wp/docs-pro/modules/cache-control/../../images/cache-control-list.png" alt="Creating a Cache Control List" title="Creating a Cache Control List"></p> <h2 id="resources">Resources</h2> <p>Video showing how the response&#39;s <code>Cache-Control</code> header contains different <code>max-age</code> values depending on the Cache Control configuration for the fields in the query: <a href="https://vimeo.com/413503188" target="_blank">vimeo.com/413503188</a>.</p> '}}]);