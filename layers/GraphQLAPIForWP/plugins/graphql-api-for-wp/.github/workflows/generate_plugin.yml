####################################################################################
# GitHub Action:
# Whenever creating a new release of the source code,
# also create a release of the installable plugin,
# and downgrading it from PHP 7.4 to 7.1 to support more users.
####################################################################################
# Steps to execute:
# - Checkout the source code
# - Run "composer install" for development, to install dependencies for Rector
# - Run Rector to downgrade code from PHP 7.4 to 7.1
# - Run "composer install" for production (required dependencies are already under vendor/)
# - Create a .zip file, excluding:
#   - All hidden files (.git, .gitignore, etc)
#   - Rector file
#   - All development files, ending in .dist
#   - All composer files <= after installing dependencies, no need for them anymore
#   - Markdown files concerning development
#   - Folder build/ <= created only to store the .zip file
#   - Folder dev-helpers/ <= not needed for the plugin
# - Upload the .zip file as an artifact to the action (this step is possibly optional)
# - Upload the .zip file as a release, for download
####################################################################################
name: Generate Installable Plugin and Upload as Release Asset
on:
  release:
    types: [published]
jobs:
  build:
    name: Build, Downgrade and Upload Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

        # see https://github.com/shivammathur/setup-php
      - name: Use PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Downgrade code for production (to PHP 7.1)
        run: |
          composer config platform-check false
          composer install
          vendor/bin/rector process --config=rector-downgrade-code.php
          sed -i 's/Requires PHP: 7.4/Requires PHP: 7.1/' graphql-api.php

      - name: Build project for production
        run: |
          composer install --no-dev --optimize-autoloader
          mkdir build

      - name: Create artifact
        uses: montudor/action-zip@v0.1.0
        with:
          args: zip -X -r build/graphql-api.zip . -x *.git* node_modules/\* .* "*/\.*" CHANGELOG.md CODE_OF_CONDUCT.md CONTRIBUTING.md ISSUE_TEMPLATE.md LICENSE.md PULL_REQUEST_TEMPLATE.md README.md rector-downgrade-code.php *.dist composer.* "**/package-lock.json" build** dev-helpers** docs/images** tests** "**/tests**"

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
            name: generated-plugin
            path: build/graphql-api.zip

      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: build/graphql-api.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ## Copy the downgraded code to the DIST repo
      ## 1. Unzip the plugin into a temp folder
      - name: Uncompress artifact
        uses: montudor/action-zip@v0.1.0
        with:
          args: unzip -qq build/graphql-api.zip -d build/downgraded-code

      # 2. Publish it to the remote repository
      -
          uses: symplify/github-action-monorepo-split@master
          env:
              GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          with:
              package-directory: 'build/downgraded-code'
              split-repository-organization: 'GraphQLAPI'
              split-repository-name: 'graphql-api-for-wp-dist'
              user-name: "leoloso"
              user-email: "leo@getpop.org"

