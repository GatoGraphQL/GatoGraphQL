(window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation=window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation||[]).push([[24],{75:function(s,a){s.exports='<h1 id="helper-fields">Helper Fields</h1> <p>Collection of fields providing useful functionality concerning URLs, date formatting, text manipulation, and others</p> <h2 id="description">Description</h2> <p>This module adds fields to the GraphQL schema which provide commonly-used helper functionality.</p> <p>Helper fields are <strong>Global Fields</strong>, hence they are added to every single type in the GraphQL schema: in <code>QueryRoot</code>, but also in <code>Post</code>, <code>User</code>, etc.</p> <h2 id="available-helper-fields">Available Helper Fields</h2> <p>This is the list of currently-available helper fields.</p> <h3 id="_objectconverttonamevalueentrylist"><code>_objectConvertToNameValueEntryList</code></h3> <p>Retrieve the properties from a JSON object to create a list of JSON entries.</p> <p>This field is used to transform a <code>JSONObject</code> output from some field, into a <code>[JSONObject]</code> that is input into another field.</p> <p>For instance, the response from <code>_httpRequestHeaders</code> (from module <strong>Inspect HTTP Request Fields)</strong> is a <code>StringValueJSONObject</code>, and the headers passed as input in <code>_sendHTTPRequest</code> are <code>[HTTPRequestOptionHeaderInput!]</code>, with each <code>HTTPRequestOptionHeaderInput</code> having shape <code>{ name: &quot;...&quot;, value: &quot;...&quot; }</code>. Then, the following query allows to bridge between output and input:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">headers</span><span class="hljs-punctuation">:</span> _httpRequestHeaders\n  <span class="hljs-symbol">headersInput</span><span class="hljs-punctuation">:</span> _objectConvertToNameValueEntryList<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">object</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__headers</span>\n  <span class="hljs-punctuation">)</span>\n  _sendHTTPRequest<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;...&quot;</span>,\n      <span class="hljs-symbol">options</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">headers</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__headersInput</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-comment"># ...</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h3 id="_strconvertmarkdowntohtml"><code>_strConvertMarkdownToHTML</code></h3> <p>Converts Markdown to HTML.</p> <p>This method can help produce HTML content that is provided as input to some field or mutation. That is the case with mutation <code>_sendEmail</code> (from the <strong>Email Sender</strong> module), which can send emails in HTML format.</p> <p>For instance, this query uses Markdown content to produce the HTML to send in the email:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">query</span> GetPostData<span class="hljs-punctuation">(</span><span class="hljs-variable">$postID</span>: ID<span class="hljs-punctuation">!</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n  post<span class="hljs-punctuation">(</span><span class="hljs-symbol">by</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><span class="hljs-symbol">id</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$postID</span>}<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    title <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postTitle&quot;</span><span class="hljs-punctuation">)</span>\n    excerpt <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postExcerpt&quot;</span><span class="hljs-punctuation">)</span>\n    url <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postLink&quot;</span><span class="hljs-punctuation">)</span>\n    author <span class="hljs-punctuation">{</span>\n      name <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postAuthorName&quot;</span><span class="hljs-punctuation">)</span>\n      url <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postAuthorLink&quot;</span><span class="hljs-punctuation">)</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span>\n\n<span class="hljs-keyword">query</span> GetEmailData <span class="hljs-meta">@depends</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">on</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GetPostData&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">emailMessageTemplate</span><span class="hljs-punctuation">:</span> _strConvertMarkdownToHTML<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">text</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;\n\nThere is a new post by [{$postAuthorName}]({$postAuthorLink}):\n\n**{$postTitle}**: {$postExcerpt}\n\n[Read online]({$postLink})\n\n    &quot;</span><span class="hljs-string">&quot;&quot;</span>\n  <span class="hljs-punctuation">)</span>\n  <span class="hljs-symbol">emailMessage</span><span class="hljs-punctuation">:</span> _strReplaceMultiple<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">search</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;{$postAuthorName}&quot;</span>, <span class="hljs-string">&quot;{$postAuthorLink}&quot;</span>, <span class="hljs-string">&quot;{$postTitle}&quot;</span>, <span class="hljs-string">&quot;{$postExcerpt}&quot;</span>, <span class="hljs-string">&quot;{$postLink}&quot;</span><span class="hljs-punctuation">]</span>,\n    <span class="hljs-symbol">replaceWith</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">$postAuthorName</span>, <span class="hljs-variable">$postAuthorLink</span>, <span class="hljs-variable">$postTitle</span>, <span class="hljs-variable">$postExcerpt</span>, <span class="hljs-variable">$postLink</span>],\n    <span class="hljs-symbol">in</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__emailMessageTemplate</span>\n  <span class="hljs-punctuation">)</span>\n    <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;emailMessage&quot;</span><span class="hljs-punctuation">)</span>\n  <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> _sprintf<span class="hljs-punctuation">(</span><span class="hljs-symbol">string</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;New post created by %s&quot;</span>, <span class="hljs-symbol">values</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">$postAuthorName</span>]<span class="hljs-punctuation">)</span>\n    <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;emailSubject&quot;</span><span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span>\n\n<span class="hljs-keyword">mutation</span> SendEmail <span class="hljs-meta">@depends</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">on</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GetEmailData&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n  _sendEmail<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">to</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;target@email.com&quot;</span>\n      <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$emailSubject</span>\n      <span class="hljs-symbol">messageAs</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">html</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$emailMessage</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    status\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h3 id="_urladdparams"><code>_urlAddParams</code></h3> <p>Adds params to a URL.</p> <p>The parameters input is a <code>JSONObject</code> of <code>param name =&gt; value</code>, allowing us to pass values of multiple types, including <code>String</code>, <code>Int</code>, List (eg: <code>[String]</code>) and also <code>JSONObject</code>.</p> <p>This query:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  _urlAddParams<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://gatographql.com&quot;</span>,\n    <span class="hljs-symbol">params</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">stringParam</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;someValue&quot;</span>,\n      <span class="hljs-symbol">intParam</span><span class="hljs-punctuation">:</span> <span class="hljs-number">5</span>,\n      <span class="hljs-symbol">stringListParam</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;value1&quot;</span>, <span class="hljs-string">&quot;value2&quot;</span><span class="hljs-punctuation">]</span>,\n      <span class="hljs-symbol">intListParam</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">4</span><span class="hljs-punctuation">]</span>,\n      <span class="hljs-symbol">objectParam</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-string">&quot;1st&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1stValue&quot;</span>,\n        <span class="hljs-string">&quot;2nd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span>,\n        <span class="hljs-string">&quot;3rd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;uno&quot;</span>, <span class="hljs-number">2.5</span><span class="hljs-punctuation">]</span>\n        <span class="hljs-string">&quot;4th&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-symbol">nestedIn</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;nestedOut&quot;</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...produces:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;_urlAddParams&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https:\\/\\/gatographql.com?stringParam=someValue&amp;intParam=5&amp;stringListParam%5B0%5D=value1&amp;stringListParam%5B1%5D=value2&amp;intListParam%5B0%5D=8&amp;intListParam%5B1%5D=9&amp;intListParam%5B2%5D=4&amp;objectParam%5B1st%5D=1stValue&amp;objectParam%5B2nd%5D=2&amp;objectParam%5B3rd%5D%5B0%5D=uno&amp;objectParam%5B3rd%5D%5B1%5D=2.5&amp;objectParam%5B4th%5D%5BnestedIn%5D=nestedOut&quot;</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>(The decoded URL is <code>&quot;https://gatographql.com?stringParam=someValue&amp;intParam=5&amp;stringListParam[0]=value1&amp;stringListParam[1]=value2&amp;intListParam[0]=8&amp;intListParam[1]=9&amp;intListParam[2]=4&amp;objectParam[1st]=1stValue&amp;objectParam[2nd]=2&amp;objectParam[3rd][0]=uno&amp;objectParam[3rd][1]=2.5&amp;objectParam[4th][nestedIn]=nestedOut&quot;</code>.)</p> <p>Please notice that <code>null</code> values are not added to the URL.</p> <p>This query:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  _urlAddParams<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://gatographql.com&quot;</span>,\n    <span class="hljs-symbol">params</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">stringParam</span><span class="hljs-punctuation">:</span> <span class="hljs-literal">null</span>,\n      <span class="hljs-symbol">listParam</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span>, <span class="hljs-literal">null</span>, <span class="hljs-number">3</span><span class="hljs-punctuation">]</span>,\n      <span class="hljs-symbol">objectParam</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">uno</span><span class="hljs-punctuation">:</span> <span class="hljs-literal">null</span>,\n        <span class="hljs-symbol">dos</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...produces:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;_urlAddParams&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https:\\/\\/gatographql.com?listParam%5B0%5D=1&amp;listParam%5B2%5D=3&amp;objectParam%5Bdos%5D=2&quot;</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>(The decoded URL is <code>&quot;https://gatographql.com?listParam[0]=1&amp;listParam[2]=3&amp;objectParam[dos]=2&quot;</code>.)</p> <h3 id="_urlremoveparams"><code>_urlRemoveParams</code></h3> <p>Removes params from a URL.</p> <h2 id="examples">Examples</h2> <p>In combination with the <strong>Inspect HTTP Request Fields</strong> and <strong>Field to Input</strong> modules, we can retrieve the currently-requested URL when executing a GraphQL custom endpoint or persisted query, add extra parameters, and send another HTTP request to the new URL.</p> <p>For instance, in this query, we retrieve the IDs of the users in the website and execute a new GraphQL query passing their ID as parameter:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  users <span class="hljs-punctuation">{</span>\n    <span class="hljs-symbol">userID</span><span class="hljs-punctuation">:</span> id\n    <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> _urlAddParams<span class="hljs-punctuation">(</span>\n      <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://somewebsite/endpoint/user-data&quot;</span>,\n      <span class="hljs-symbol">params</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">userID</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__userID</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">)</span>\n    <span class="hljs-symbol">headers</span><span class="hljs-punctuation">:</span> _httpRequestHeaders\n    <span class="hljs-symbol">headerNameValueEntryList</span><span class="hljs-punctuation">:</span> _objectConvertToNameValueEntryList<span class="hljs-punctuation">(</span>\n      <span class="hljs-symbol">object</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__headers</span>\n    <span class="hljs-punctuation">)</span>\n    _sendHTTPRequest<span class="hljs-punctuation">(</span><span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__url</span>\n      <span class="hljs-symbol">options</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">headers</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__headerNameValueEntryList</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n      statusCode\n      contentType\n      body\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> '}}]);