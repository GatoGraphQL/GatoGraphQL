(window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation=window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation||[]).push([[17],{68:function(s,a){s.exports='<h1 id="email-sender">Email Sender</h1> <p>Send emails via global mutation <code>_sendEmail</code>.</p> <h2 id="description">Description</h2> <p>Mutation <code>_sendEmail</code> sends emails by executing WordPress <code>wp_mail</code> function. As a result, it will use the configuration defined for sending emails in WordPress (such as the SMTP provider to use).</p> <p>The email can be sent with content types &quot;text&quot; or &quot;HTML&quot;, depending on the value of the <code>messageAs</code> input, which is a &quot;oneof&quot; InputObject (i.e. only one of its properties can be provided).</p> <p>To send as text, provide property <code>messageAs.text</code>:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">mutation</span> <span class="hljs-punctuation">{</span>\n  _sendEmail<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">to</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;target@email.com&quot;</span>\n      <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Email with text content&quot;</span>\n      <span class="hljs-symbol">messageAs</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">text</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Hello world!&quot;</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    status\n    errors <span class="hljs-punctuation">{</span>\n      __typename\n      <span class="hljs-punctuation">...</span><span class="hljs-keyword">on</span> ErrorPayload <span class="hljs-punctuation">{</span>\n        message\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>To send as HTML, provide property <code>messageAs.html</code>:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">mutation</span> <span class="hljs-punctuation">{</span>\n  _sendEmail<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">to</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;target@email.com&quot;</span>\n      <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Email with HTML content&quot;</span>\n      <span class="hljs-symbol">messageAs</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">html</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&lt;p&gt;Hello world!&lt;/p&gt;&quot;</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    status\n    errors <span class="hljs-punctuation">{</span>\n      __typename\n      <span class="hljs-punctuation">...</span><span class="hljs-keyword">on</span> ErrorPayload <span class="hljs-punctuation">{</span>\n        message\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h2 id="global-field">Global Field</h2> <p><code>_sendEmail</code> is a global field (or, more precisely, a global mutation). This means that, if <strong>Nested Mutations</strong> are enabled, this mutations can be executed on any type (i.e. not only in <code>MutationRoot</code>).</p> <p>This is useful for iterating a list of users, and sending an email to each of them (in this case, the mutation is triggered while in the <code>User</code> type):</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">mutation</span> <span class="hljs-punctuation">{</span>\n  users <span class="hljs-punctuation">{</span>\n    email\n    _sendEmail<span class="hljs-punctuation">(</span>\n      <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">to</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__email</span>\n        <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;...&quot;</span>\n        <span class="hljs-symbol">messageAs</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-symbol">text</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;...&quot;</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    status\n    errors <span class="hljs-punctuation">{</span>\n      __typename\n      <span class="hljs-punctuation">...</span><span class="hljs-keyword">on</span> ErrorPayload <span class="hljs-punctuation">{</span>\n        message\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>Combined with other features (provided by the <strong>SpecialSchema</strong> extension), we can create personalized messages for every user:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">mutation</span> <span class="hljs-punctuation">{</span>\n  users <span class="hljs-punctuation">{</span>\n    email\n    displayName\n    <span class="hljs-symbol">remainingCredits</span><span class="hljs-punctuation">:</span> metaValue<span class="hljs-punctuation">(</span><span class="hljs-symbol">key</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;credits&quot;</span><span class="hljs-punctuation">)</span>\n    <span class="hljs-symbol">emailMessage</span><span class="hljs-punctuation">:</span> _sprintf<span class="hljs-punctuation">(</span>\n      <span class="hljs-symbol">string</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;\n      &lt;p&gt;Hello %s!&lt;/p&gt;\n      &lt;p&gt;Your have &lt;strong&gt;%s remaining credits&lt;/strong&gt; in your account.&lt;/p&gt;\n      &lt;p&gt;&lt;a href=&quot;</span>%s<span class="hljs-string">&quot;&gt;Buy more?&lt;/a&gt;&lt;/p&gt;\n      &quot;</span><span class="hljs-string">&quot;&quot;</span>,\n      <span class="hljs-symbol">values</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n        <span class="hljs-variable">$__displayName</span>,\n        <span class="hljs-variable">$__remainingCredits</span>,\n        <span class="hljs-string">&quot;https://mysite.com/buy-credits&quot;</span>\n      <span class="hljs-punctuation">]</span>\n    <span class="hljs-punctuation">)</span>\n    _sendEmail<span class="hljs-punctuation">(</span>\n      <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">to</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__email</span>\n        <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Remaining credits&quot;</span>\n        <span class="hljs-symbol">messageAs</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-symbol">html</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__emailMessage</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n      status\n      errors <span class="hljs-punctuation">{</span>\n        __typename\n        <span class="hljs-punctuation">...</span><span class="hljs-keyword">on</span> ErrorPayload <span class="hljs-punctuation">{</span>\n          message\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h2 id="further-examples">Further examples</h2> <p>The query below sends an email to the admin user with some post&#39;s content (eg: it can be triggered whenever a new post is published). It uses:</p> <ul> <li><strong>Multiple Query Execution</strong> to manage the query into logical units</li> <li>Field <code>_strConvertMarkdownToHTML</code> from <strong>Helper Fields</strong> to compose the email message using Markdown</li> <li>Fields <code>_strReplaceMultiple</code> and <code>_sprintf</code> from <strong>Function Fields</strong> to dynamically inject values into the email subject and message</li> <li><strong>Field to Input</strong> to retrieve and provide the admin&#39;s email from <code>wp_options</code></li> </ul> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">query</span> GetPostData<span class="hljs-punctuation">(</span><span class="hljs-variable">$postID</span>: ID<span class="hljs-punctuation">!</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n  post<span class="hljs-punctuation">(</span><span class="hljs-symbol">by</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><span class="hljs-symbol">id</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$postID</span>}<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    title <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postTitle&quot;</span><span class="hljs-punctuation">)</span>\n    excerpt <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postExcerpt&quot;</span><span class="hljs-punctuation">)</span>\n    url <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postLink&quot;</span><span class="hljs-punctuation">)</span>\n    author <span class="hljs-punctuation">{</span>\n      name <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postAuthorName&quot;</span><span class="hljs-punctuation">)</span>\n      url <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postAuthorLink&quot;</span><span class="hljs-punctuation">)</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span>\n\n<span class="hljs-keyword">query</span> GetEmailData <span class="hljs-meta">@depends</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">on</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GetPostData&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">emailMessageTemplate</span><span class="hljs-punctuation">:</span> _strConvertMarkdownToHTML<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">text</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;\n\nThere is a new post by [{$postAuthorName}]({$postAuthorLink}):\n\n**{$postTitle}**: {$postExcerpt}\n\n[Read online]({$postLink})\n\n    &quot;</span><span class="hljs-string">&quot;&quot;</span>\n  <span class="hljs-punctuation">)</span>\n  <span class="hljs-symbol">emailMessage</span><span class="hljs-punctuation">:</span> _strReplaceMultiple<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">search</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;{$postAuthorName}&quot;</span>, <span class="hljs-string">&quot;{$postAuthorLink}&quot;</span>, <span class="hljs-string">&quot;{$postTitle}&quot;</span>, <span class="hljs-string">&quot;{$postExcerpt}&quot;</span>, <span class="hljs-string">&quot;{$postLink}&quot;</span><span class="hljs-punctuation">]</span>,\n    <span class="hljs-symbol">replaceWith</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">$postAuthorName</span>, <span class="hljs-variable">$postAuthorLink</span>, <span class="hljs-variable">$postTitle</span>, <span class="hljs-variable">$postExcerpt</span>, <span class="hljs-variable">$postLink</span>],\n    <span class="hljs-symbol">in</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__emailMessageTemplate</span>\n  <span class="hljs-punctuation">)</span>\n    <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;emailMessage&quot;</span><span class="hljs-punctuation">)</span>\n  <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> _sprintf<span class="hljs-punctuation">(</span><span class="hljs-symbol">string</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;New post created by %s&quot;</span>, <span class="hljs-symbol">values</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">$postAuthorName</span>]<span class="hljs-punctuation">)</span>\n    <span class="hljs-meta">@export</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">as</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;emailSubject&quot;</span><span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span>\n\n<span class="hljs-keyword">mutation</span> SendEmail <span class="hljs-meta">@depends</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">on</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GetEmailData&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">adminEmail</span><span class="hljs-punctuation">:</span> optionValue<span class="hljs-punctuation">(</span><span class="hljs-symbol">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;admin_email&quot;</span><span class="hljs-punctuation">)</span>\n  _sendEmail<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">to</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__adminEmail</span>\n      <span class="hljs-symbol">subject</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$emailSubject</span>\n      <span class="hljs-symbol">messageAs</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-symbol">html</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$emailMessage</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    status\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> '}}]);