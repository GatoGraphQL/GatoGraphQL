(window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation=window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation||[]).push([[21],{72:function(e,s){e.exports='<h1 id="function-directives">Function Directives</h1> <p>Manipulate the field output using standard programming language functions (provided via special directives)</p> <h2 id="description">Description</h2> <p>This module adds several directives to the GraphQL schema which expose functionalities commonly found in programming languages (such as PHP).</p> <p>Directive fields are useful for manipulating the data once it has been retrieved, allowing us to transform a field value in whatever way it is required, and granting us powerful data import/export capabilities.</p> <h2 id="available-function-directives">Available Function Directives</h2> <p>This is the list of currently-available function directives.</p> <h3 id="arrayadditem"><code>@arrayAddItem</code></h3> <p>Adds an element to the array.</p> <h3 id="arraydiff"><code>@arrayDiff</code></h3> <p>Computes the difference with another array.</p> <h3 id="arrayfilter"><code>@arrayFilter</code></h3> <p>Filters out the null or empty elements in the array.</p> <h3 id="arraymerge"><code>@arrayMerge</code></h3> <p>Merge the array with another array.</p> <h3 id="arraypad"><code>@arrayPad</code></h3> <p>Pad an array to the specified length with a value.</p> <h3 id="arrayremovefirst"><code>@arrayRemoveFirst</code></h3> <p>Remove the first element in the array.</p> <h3 id="arrayremovelast"><code>@arrayRemoveLast</code></h3> <p>Remove the last element in the array.</p> <h3 id="arrayreverse"><code>@arrayReverse</code></h3> <p>Reverse an array.</p> <h3 id="arraysetitem"><code>@arraySetItem</code></h3> <p>Sets an element on some position of the array.</p> <h3 id="arrayslice"><code>@arraySlice</code></h3> <p>Extract a slice of an array.</p> <h3 id="arraysplice"><code>@arraySplice</code></h3> <p>Remove a portion of an array and replace it with something else.</p> <h3 id="arrayunique"><code>@arrayUnique</code></h3> <p>Filters out all duplicated elements in the array.</p> <h3 id="boolopposite"><code>@boolOpposite</code></h3> <p>Convert a bool to its opposite value.</p> <h3 id="fail"><code>@fail</code></h3> <p>Add an entry under the response&#39;s <code>errors</code> to trigger the failure of the GraphQL request whenever some condition on the field is met.</p> <h3 id="floatdivide"><code>@floatDivide</code></h3> <p>Divide the field value by a float number.</p> <h3 id="intadd"><code>@intAdd</code></h3> <p>Add an integer number to the field value.</p> <h3 id="intmultiply"><code>@intMultiply</code></h3> <p>Multiply an integer number with the field value.</p> <h3 id="objectaddentry"><code>@objectAddEntry</code></h3> <p>Add an entry to the JSON object.</p> <h3 id="objectkeepproperties"><code>@objectKeepProperties</code></h3> <p>Keep specific properties only from the JSON object.</p> <h3 id="objectremoveentry"><code>@objectRemoveEntry</code></h3> <p>Removes an entry from the JSON object.</p> <h3 id="objectremoveproperties"><code>@objectRemoveProperties</code></h3> <p>Remove specific properties from the JSON object.</p> <h3 id="setnull"><code>@setNull</code></h3> <p>Set the field&#39;s value as <code>null</code>.</p> <h3 id="strappend"><code>@strAppend</code></h3> <p>Append some string to the end of the string in the field value.</p> <h3 id="strlowercase"><code>@strLowerCase</code></h3> <p>Convert a string to lower case.</p> <h3 id="strpad"><code>@strPad</code></h3> <p>Pad a string to a certain length with another string.</p> <h3 id="strprepend"><code>@strPrepend</code></h3> <p>Append some string to the beginning of the string in the field value.</p> <h3 id="strregexreplace"><code>@strRegexReplace</code></h3> <p>Execute a regular expression to search and replace a string (see <a href="https://www.php.net/manual/en/function.preg-replace.php">documentation for PHP function <code>preg_replace</code></a>).</p> <h3 id="strregexreplacemultiple"><code>@strRegexReplaceMultiple</code></h3> <p>Execute regular expressions to search and replace a list of strings (see <a href="https://www.php.net/manual/en/function.preg-replace.php">documentation for PHP function <code>preg_replace</code></a>).</p> <h3 id="strrepeat"><code>@strRepeat</code></h3> <p>Repeat a string.</p> <h3 id="strreplace"><code>@strReplace</code></h3> <p>Replace a string with another string.</p> <h3 id="strreplacemultiple"><code>@strReplaceMultiple</code></h3> <p>Replace a list of strings with another list of strings.</p> <h3 id="strreverse"><code>@strReverse</code></h3> <p>Reverse a string.</p> <h3 id="strshuffle"><code>@strShuffle</code></h3> <p>Randomly shuffles a string.</p> <h3 id="strstripslashes"><code>@strStripSlashes</code></h3> <p>Returns a string with backslashes stripped off. (\\&#39; becomes &#39; and so on.) Double backslashes (\\\\) are made into a single backslash .</p> <h3 id="strsubstr"><code>@strSubstr</code></h3> <p>Return part of a string.</p> <h3 id="strtitlecase"><code>@strTitleCase</code></h3> <p>Convert a string to title case.</p> <h3 id="strtrim"><code>@strTrim</code></h3> <p>Strip whitespace (or other characters) from the beginning and end of a string.</p> <h3 id="struppercase"><code>@strUpperCase</code></h3> <p>Convert a string to upper case.</p> <h2 id="examples">Examples</h2> <p>For instance, if this query produces the results below:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  posts <span class="hljs-punctuation">{</span>\n    title\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;posts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Hello world!&quot;</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;lovely weather&quot;</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>Then, the following query will produce the following response:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  posts <span class="hljs-punctuation">{</span>\n    title <span class="hljs-meta">@strUpperCase</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;posts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;HELLO WORLD!&quot;</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;LOVELY WEATHER&quot;</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> '}}]);