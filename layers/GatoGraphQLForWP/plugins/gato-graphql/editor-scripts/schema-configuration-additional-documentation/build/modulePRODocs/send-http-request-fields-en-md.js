(window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation=window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation||[]).push([[35],{86:function(s,n){s.exports='<h1 id="send-http-request-fields">Send HTTP Request Fields</h1> <p>Addition of fields to execute HTTP requests against a webserver and fetch their response:</p> <ul> <li><code>_sendJSONObjectItemHTTPRequest</code></li> <li><code>_sendJSONObjectItemHTTPRequests</code></li> <li><code>_sendJSONObjectCollectionHTTPRequest</code></li> <li><code>_sendJSONObjectCollectionHTTPRequests</code></li> <li><code>_sendHTTPRequest</code></li> <li><code>_sendHTTPRequests</code></li> <li><code>_sendGraphQLHTTPRequest</code></li> <li><code>_sendGraphQLHTTPRequests</code></li> </ul> <h2 id="description">Description</h2> <p>This module adds global fields to the GraphQL schema to retrieve data from an external source or list of sources.</p> <p>Due to security reasons, the URLs that can be connected to must be explicitly configured (explained in the next section).</p> <h3 id="_sendjsonobjectitemhttprequest"><code>_sendJSONObjectItemHTTPRequest</code></h3> <p>It retrieves the (REST) response for a single JSON object.</p> <p><strong>Signature:</strong> <code>_sendJSONObjectItemHTTPRequest(input: HTTPRequestInput!): JSONObject</code>.</p> <h3 id="_sendjsonobjectitemhttprequests"><code>_sendJSONObjectItemHTTPRequests</code></h3> <p>It retrieves the (REST) response for a single JSON object from multiple endpoints, executed asynchronously (in parallel) or synchronously (one after the other).</p> <p><strong>Signature:</strong> <code>_sendJSONObjectItemHTTPRequests(async: Boolean = true, inputs: [HTTPRequestInput!]!): [JSONObject]</code>.</p> <h3 id="_sendjsonobjectcollectionhttprequest"><code>_sendJSONObjectCollectionHTTPRequest</code></h3> <p>It retrieves the (REST) response for a collection of JSON objects.</p> <p><strong>Signature:</strong> <code>_sendJSONObjectCollectionHTTPRequest(input: HTTPRequestInput!): [JSONObject]</code>.</p> <h3 id="_sendjsonobjectcollectionhttprequests"><code>_sendJSONObjectCollectionHTTPRequests</code></h3> <p>It retrieves the (REST) response for a collection of JSON objects from multiple endpoints, executed asynchronously (in parallel) or synchronously (one after the other).</p> <p><strong>Signature:</strong> <code>_sendJSONObjectCollectionHTTPRequests(async: Boolean = true, inputs: [HTTPRequestInput!]!): [[JSONObject]]</code>.</p> <h3 id="_sendhttprequest"><code>_sendHTTPRequest</code></h3> <p>It connects to the specified URL and retrieves an <code>HTTPResponse</code> object, which contains the following fields:</p> <ul> <li><code>statusCode: Int!</code></li> <li><code>contentType: String!</code></li> <li><code>body: String!</code></li> <li><code>headers: JSONObject!</code></li> <li><code>header(name: String!): String</code></li> <li><code>hasHeader(name: String!): Boolean!</code></li> </ul> <p><strong>Signature:</strong> <code>_sendHTTPRequest(input: HTTPRequestInput!): HTTPResponse</code>.</p> <h3 id="_sendhttprequests"><code>_sendHTTPRequests</code></h3> <p>Similar to <code>_sendHTTPRequest</code> but it receives multiple URLs, and allows to connect to them asynchronously (in parallel).</p> <p><strong>Signature:</strong> <code>_sendHTTPRequests(async: Boolean = true, inputs: [HTTPRequestInput!]!): [HTTPResponse]</code>.</p> <h3 id="_sendgraphqlhttprequest"><code>_sendGraphQLHTTPRequest</code></h3> <p>Execute a GraphQL query against the provided endpoint, and retrieve the response as a JSON object.</p> <p>The input to this field accepts the data expected for GraphQL: the endpoint, GraphQL query, variables and operation name, and already sets the default method (<code>POST</code>) and content type (<code>application/json</code>).</p> <p><strong>Signature:</strong> <code>_sendGraphQLHTTPRequest(input: GraphQLRequestInput!): JSONObject</code>.</p> <h3 id="_sendgraphqlhttprequests"><code>_sendGraphQLHTTPRequests</code></h3> <p>Similar to <code>_sendGraphQLHTTPRequests</code> but it executes multiple GraphQL queries concurrently, whether asynchronously (in parallel) or synchronously (one after the other).</p> <p><strong>Signature:</strong> <code>_sendGraphQLHTTPRequests(async: Boolean = true, inputs: [GraphQLRequestInput!]!): JSONObject</code>.</p> <h2 id="configuring-the-allowed-urls">Configuring the allowed URLs</h2> <p>We must configure the list of URLs that we can connect to.</p> <p>Each entry can either be:</p> <ul> <li>A regex (regular expression), if it&#39;s surrounded by <code>/</code> or <code>#</code>, or</li> <li>The complete URL, otherwise</li> </ul> <p>For instance, any of these entries match URL <code>&quot;https://gatographql.com/features/&quot;</code>:</p> <ul> <li><code>https://gatographql.com/features/</code></li> <li><code>#https://gatographql.com/features/?#</code></li> <li><code>#https://gatographql.com/.*#</code></li> <li><code>/https:\\\\/\\\\/gatographql.com\\\\/(\\S+)/</code></li> </ul> <p>There are 2 places where this configuration can take place, in order of priority:</p> <ol> <li>Custom: In the corresponding Schema Configuration</li> <li>General: In the Settings page</li> </ol> <p>In the Schema Configuration applied to the endpoint, select option <code>&quot;Use custom configuration&quot;</code> and then input the desired entries:</p> <p><img src="https://raw.githubusercontent.com/leoloso/PoP/master/layers/GatoGraphQLForWP/plugins/gato-graphql/docs/implicit-features//../../images/http-requests-schema-configuration-entries.png" alt="Defining the entries for the Schema Configuration" title="Defining the entries for the Schema Configuration"></p> <p>Otherwise, the entries defined in the &quot;Send HTTP Request Fields&quot; tab from the Settings will be used:</p> <p><img src="https://raw.githubusercontent.com/leoloso/PoP/master/layers/GatoGraphQLForWP/plugins/gato-graphql/docs/implicit-features//../../images/http-requests-settings-entries.png" alt="Defining the entries for the Settings" title="Defining the entries for the Settings"></p> <p>There are 2 behaviors, &quot;Allow access&quot; and &quot;Deny access&quot;:</p> <ul> <li><strong>Allow access:</strong> only the configured entries can be accessed, and no other can</li> <li><strong>Deny access:</strong> the configured entries cannot be accessed, all other entries can</li> </ul> <p><img src="https://raw.githubusercontent.com/leoloso/PoP/master/layers/GatoGraphQLForWP/plugins/gato-graphql/docs/implicit-features//../../images/http-requests-settings-behavior.png" alt="Defining the access behavior" title="Defining the access behavior"></p> <h2 id="when-to-use-each-field">When to use each field</h2> <p>All fields are similar but different.</p> <h3 id="_sendjsonobjectitemhttprequest-1"><code>_sendJSONObjectItemHTTPRequest</code></h3> <p>This field retrieves a JSON object item, which is useful when querying a single item from a REST endpoint, as from the WP REST API endpoint <code>/wp-json/wp/v2/posts/1/</code>.</p> <p>This query:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">postData</span><span class="hljs-punctuation">:</span> _sendJSONObjectItemHTTPRequest<span class="hljs-punctuation">(</span><span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/posts/1/&quot;</span> <span class="hljs-punctuation">}</span> <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...retrieves this response:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;postData&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2019-08-02T07:53:57&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;date_gmt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2019-08-02T07:53:57&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;guid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;rendered&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https:\\/\\/newapi.getpop.org\\/?p=1&quot;</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;modified&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2021-01-14T13:18:39&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;modified_gmt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2021-01-14T13:18:39&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;slug&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hello-world&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;publish&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;post&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;link&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https:\\/\\/newapi.getpop.org\\/uncategorized\\/hello-world\\/&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;rendered&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Hello world!&quot;</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;content&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;rendered&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\\n&lt;p&gt;Welcome to WordPress. This is your first post. Edit or delete it, then start writing!&lt;\\/p&gt;\\n\\n\\n\\n&lt;p&gt;I&amp;#8217;m demonstrating a Youtube video:&lt;\\/p&gt;\\n\\n\\n\\n&lt;figure class=\\&quot;wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\\&quot;&gt;&lt;div class=\\&quot;wp-block-embed__wrapper\\&quot;&gt;\\n&lt;iframe loading=\\&quot;lazy\\&quot; title=\\&quot;Introduction to the Component-based API by Leonardo Losoviz | JSConf.Asia 2019\\&quot; width=\\&quot;750\\&quot; height=\\&quot;422\\&quot; src=\\&quot;https:\\/\\/www.youtube.com\\/embed\\/9pT-q0SSYow?feature=oembed\\&quot; frameborder=\\&quot;0\\&quot; allow=\\&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\&quot; allowfullscreen&gt;&lt;\\/iframe&gt;\\n&lt;\\/div&gt;&lt;figcaption&gt;This is my presentation in JSConf Asia 2019&lt;\\/figcaption&gt;&lt;\\/figure&gt;\\n&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;protected&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;excerpt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;rendered&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&lt;p&gt;Welcome to WordPress. This is your first post. Edit or delete it, then start writing! I&amp;#8217;m demonstrating a Youtube video:&lt;\\/p&gt;\\n&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;protected&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;author&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;featured_media&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;comment_status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;closed&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;ping_status&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;open&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;sticky&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;template&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;format&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;standard&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;meta&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;categories&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n        <span class="hljs-number">1</span>\n      <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;tags&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n        <span class="hljs-number">193</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-number">173</span>\n      <span class="hljs-punctuation">]</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h3 id="_sendjsonobjectcollectionhttprequest-1"><code>_sendJSONObjectCollectionHTTPRequest</code></h3> <p>This field is similar to <code>_sendJSONObjectItemHTTPRequest</code>, but it retrieves a collection of JSON objects, as from the WP REST API endpoint <code>/wp-json/wp/v2/posts/</code>.</p> <p>This query:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">postData</span><span class="hljs-punctuation">:</span> _sendJSONObjectItemHTTPRequest<span class="hljs-punctuation">(</span><span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/posts/?per_page=3&amp;_fields=id,type,title,date&quot;</span> <span class="hljs-punctuation">}</span> <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...retrieves this response:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;postData&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1692</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-04-26T10:10:08&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;post&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;rendered&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;My Blogroll&quot;</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1657</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2020-12-21T08:24:18&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;post&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;rendered&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;A tale of two cities &amp;#8211; teaser&quot;</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1499</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2019-08-08T02:49:36&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;post&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;rendered&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;COPE with WordPress: Post demo containing plenty of blocks&quot;</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h3 id="_sendhttprequest-1"><code>_sendHTTPRequest</code></h3> <p>This field retrieves an <code>HTTPResponse</code> object with all properties from the response, so we can independently query the body (which is of type <code>String</code>, i.e. it is not cast as JSON), the status code, content type and headers.</p> <p>For instance, the following query:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  _sendHTTPRequest<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/comments/11/?_fields=id,date,content&quot;</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    statusCode\n    contentType\n    headers\n    body\n    <span class="hljs-symbol">contentLengthHeader</span><span class="hljs-punctuation">:</span> header<span class="hljs-punctuation">(</span><span class="hljs-symbol">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Content-Length&quot;</span><span class="hljs-punctuation">)</span>\n    <span class="hljs-symbol">cacheControlHeader</span><span class="hljs-punctuation">:</span> header<span class="hljs-punctuation">(</span><span class="hljs-symbol">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Cache-Control&quot;</span><span class="hljs-punctuation">)</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...brings this response:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;_sendHTTPRequest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-attr">&quot;statusCode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">200</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;contentType&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application\\/json; charset=UTF-8&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;headers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;Access-Control-Allow-Headers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Authorization, X-WP-Nonce, Content-Disposition, Content-MD5, Content-Type&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;Access-Control-Expose-Headers&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;X-WP-Total, X-WP-TotalPages, Link&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;Allow&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GET&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;Cache-Control&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;max-age=300,no-store&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;Content-Length&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;508&quot;</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;body&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;{\\&quot;id\\&quot;:11,\\&quot;date\\&quot;:\\&quot;2020-12-12T04:09:36\\&quot;,\\&quot;content\\&quot;:{\\&quot;rendered\\&quot;:\\&quot;&lt;p&gt;Wow, this sounds awesome!&lt;\\\\\\/p&gt;\\\\n\\&quot;},\\&quot;_links\\&quot;:{\\&quot;self\\&quot;:[{\\&quot;href\\&quot;:\\&quot;https:\\\\\\/\\\\\\/newapi.getpop.org\\\\\\/wp-json\\\\\\/wp\\\\\\/v2\\\\\\/comments\\\\\\/11\\&quot;}],\\&quot;collection\\&quot;:[{\\&quot;href\\&quot;:\\&quot;https:\\\\\\/\\\\\\/newapi.getpop.org\\\\\\/wp-json\\\\\\/wp\\\\\\/v2\\\\\\/comments\\&quot;}],\\&quot;author\\&quot;:[{\\&quot;embeddable\\&quot;:true,\\&quot;href\\&quot;:\\&quot;https:\\\\\\/\\\\\\/newapi.getpop.org\\\\\\/wp-json\\\\\\/wp\\\\\\/v2\\\\\\/users\\\\\\/3\\&quot;}],\\&quot;up\\&quot;:[{\\&quot;embeddable\\&quot;:true,\\&quot;post_type\\&quot;:\\&quot;post\\&quot;,\\&quot;href\\&quot;:\\&quot;https:\\\\\\/\\\\\\/newapi.getpop.org\\\\\\/wp-json\\\\\\/wp\\\\\\/v2\\\\\\/posts\\\\\\/28\\&quot;}]}}&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;contentLengthHeader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;508&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;cacheControlHeader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;max-age=300,no-store&quot;</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h3 id="_sendgraphqlhttprequest-1"><code>_sendGraphQLHTTPRequest</code></h3> <p>Executing the following query:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">graphQLRequest</span><span class="hljs-punctuation">:</span> _sendGraphQLHTTPRequest<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">endpoint</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/api/graphql/&quot;</span>\n      <span class="hljs-symbol">query</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;\n        query GetPosts($postIDs: [ID]!) {\n          posts(filter: { ids: $postIDs }) {\n            id\n            title\n          }\n        }\n      &quot;</span><span class="hljs-string">&quot;&quot;</span>\n      <span class="hljs-symbol">variables</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n        <span class="hljs-punctuation">{</span>\n          <span class="hljs-symbol">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;postIDs&quot;</span>,\n          <span class="hljs-symbol">value</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span>, <span class="hljs-number">1499</span><span class="hljs-punctuation">]</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">]</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...brings the following response:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;graphQLRequest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;posts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n          <span class="hljs-punctuation">{</span>\n            <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1499</span><span class="hljs-punctuation">,</span>\n            <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;COPE with WordPress: Post demo containing plenty of blocks&quot;</span>\n          <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-punctuation">{</span>\n            <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>\n            <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Hello world!&quot;</span>\n          <span class="hljs-punctuation">}</span>\n        <span class="hljs-punctuation">]</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h3 id="multiple-request-fields-_sendjsonobjectitemhttprequests-_sendjsonobjectcollectionhttprequests-_sendgraphqlhttprequests-and-_sendhttprequests">Multiple-request fields: <code>_sendJSONObjectItemHTTPRequests</code>, <code>_sendJSONObjectCollectionHTTPRequests</code>, <code>_sendGraphQLHTTPRequests</code> and <code>_sendHTTPRequests</code></h3> <p>These fields work similar to their corresponding non-multiple fields, but they retrieve data from several endpoints at once, either asynchronously (in parallel) or synchronously (one after the other). The responses are placed in a list, in the same order in which the URLs were defined in the <code>urls</code> parameter.</p> <p>For instance, the following query:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">weatherForecasts</span><span class="hljs-punctuation">:</span> _sendJSONObjectItemHTTPRequests<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">urls</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-string">&quot;https://api.weather.gov/gridpoints/TOP/31,80/forecast&quot;</span>,\n      <span class="hljs-string">&quot;https://api.weather.gov/gridpoints/TOP/41,55/forecast&quot;</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...produces this response:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;weatherForecasts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Feature&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;geometry&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Polygon&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;coordinates&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n            <span class="hljs-punctuation">[</span>\n              <span class="hljs-punctuation">[</span>\n                <span class="hljs-number">-97.1089731</span><span class="hljs-punctuation">,</span>\n                <span class="hljs-number">39.766826299999998</span>\n              <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n              <span class="hljs-punctuation">[</span>\n                <span class="hljs-number">-97.108526900000001</span><span class="hljs-punctuation">,</span>\n                <span class="hljs-number">39.744778799999999</span>\n              <span class="hljs-punctuation">]</span>\n            <span class="hljs-punctuation">]</span>\n          <span class="hljs-punctuation">]</span>\n        <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;properties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;updated&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T09:39:46+00:00&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;units&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;us&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;forecastGenerator&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;BaselineForecastGenerator&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;generatedAt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T10:31:47+00:00&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;updateTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T09:39:46+00:00&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;validTimes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T03:00:00+00:00/P7DT22H&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;elevation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n            <span class="hljs-attr">&quot;unitCode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;wmoUnit:m&quot;</span><span class="hljs-punctuation">,</span>\n            <span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">441.95999999999998</span>\n          <span class="hljs-punctuation">}</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Feature&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;geometry&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Polygon&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;coordinates&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n            <span class="hljs-punctuation">[</span>\n              <span class="hljs-punctuation">[</span>\n                <span class="hljs-number">-96.812529900000001</span><span class="hljs-punctuation">,</span>\n                <span class="hljs-number">39.218048000000003</span>\n              <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n              <span class="hljs-punctuation">[</span>\n                <span class="hljs-number">-96.812148500000006</span><span class="hljs-punctuation">,</span>\n                <span class="hljs-number">39.195940300000004</span>\n              <span class="hljs-punctuation">]</span>\n            <span class="hljs-punctuation">]</span>\n          <span class="hljs-punctuation">]</span>\n        <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;properties&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;updated&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T09:39:46+00:00&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;units&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;us&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;forecastGenerator&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;BaselineForecastGenerator&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;generatedAt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T10:42:26+00:00&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;updateTime&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T09:39:46+00:00&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;validTimes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2022-03-04T03:00:00+00:00/P7DT22H&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;elevation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n            <span class="hljs-attr">&quot;unitCode&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;wmoUnit:m&quot;</span><span class="hljs-punctuation">,</span>\n            <span class="hljs-attr">&quot;value&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">409.04160000000002</span>\n          <span class="hljs-punctuation">}</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h2 id="synchronous-vs-asynchronous-execution">Synchronous vs Asynchronous execution</h2> <p>These fields allow us to execute multiple requests:</p> <ul> <li><code>_sendHTTPRequests</code></li> <li><code>_sendJSONObjectItemHTTPRequests</code></li> <li><code>_sendJSONObjectCollectionHTTPRequests</code></li> <li><code>_sendGraphQLHTTPRequests</code></li> </ul> <p>These fields receive input <code>$async</code>, to define if the requests must be executed synchronously (<code>$async =&gt; false</code>) or asynchronously.</p> <h3 id="synchronous-execution">Synchronous execution</h3> <p>The HTTP requests are executed in order, with each one executed right after the previous one has been resolved.</p> <p>When all HTTP requests are successful, the field will print an array with their responses, in the same order as they appear in the input list.</p> <p>If any HTTP request fails, then the execution stops right there, i.e. the subsequent HTTP requests in the input list are not executed.</p> <p>Some possible causes of failing HTTP requests are:</p> <ul> <li>The server to connect to is offline</li> <li>The status code of the response is not 200: a 500 internal error, a 404 not found, a 403 forbidden, etc.</li> <li>The content type of the response is not <code>application/json</code></li> </ul> <p>(The latter two are treated as an error by <code>_sendJSONObjectItemHTTPRequests</code>, <code>_sendJSONObjectCollectionHTTPRequests</code> and <code>_sendGraphQLHTTPRequests</code>, which expect to handle <code>JSON</code> types only, but not by <code>_sendHTTPRequests</code>, which is not opinionated.)</p> <p>In case of error, the field returns <code>null</code> (i.e. the response for any previous successful HTTP request will not be printed), and the error entry will contain extension <code>httpRequestInputArrayPosition</code> to indicate which is the item from the input list that failed (starting from 0):</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;errors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n    <span class="hljs-punctuation">{</span>\n      <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Server error: `GET https:\\/\\/mysite.com\\/page-triggering-some-500-error` resulted in a `500 Internal Server Error` response&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;extensions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;httpRequestInputArrayPosition&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;_sendJSONObjectItemHTTPRequests(async: false, inputs: [{url: \\&quot;https:\\/\\/mysite.com\\/page-triggering-some-500-error\\&quot;}, {url: \\&quot;https:\\/\\/mysite.com\\/wp-json\\/wp\\/v2\\/posts\\/1\\/\\&quot;}, {url: \\&quot;https:\\/\\/mysite.com\\/wp-json\\/wp\\/v2\\/users\\/1\\/\\&quot;}])&quot;</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;_sendJSONObjectItemHTTPRequests&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h3 id="asynchronous-execution">Asynchronous execution</h3> <p>All HTTP requests are executed concurrently (i.e. in parallel), and it is not known in what order will the HTTP requests be resolved.</p> <p>When all HTTP requests are successful, the field will print an array with their responses, in the same order as they appear in the input list.</p> <p>Whenever any one HTTP request fails, the execution stops immediately, however by then all other HTTP requests may have been executed too.</p> <p>In addition, the server will not indicate which is the item in the list that failed (notice that there is not <code>httpRequestInputArrayPosition</code> extension in the response below):</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;errors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n    <span class="hljs-punctuation">{</span>\n      <span class="hljs-attr">&quot;message&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Server error: `GET https:\\/\\/mysite.com\\/page-triggering-some-500-error` resulted in a `500 Internal Server Error` response&quot;</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-attr">&quot;extensions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;field&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;_sendJSONObjectItemHTTPRequests(async: true, inputs: [{url: \\&quot;https:\\/\\/mysite.com\\/page-triggering-some-500-error\\&quot;}, {url: \\&quot;https:\\/\\/mysite.com\\/wp-json\\/wp\\/v2\\/posts\\/1\\/\\&quot;}, {url: \\&quot;https:\\/\\/mysite.com\\/wp-json\\/wp\\/v2\\/users\\/1\\/\\&quot;}])&quot;</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;_sendJSONObjectItemHTTPRequests&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h2 id="global-fields">Global Fields</h2> <p>All these fields are <strong>Global Fields</strong>, so they are added to every single type in the GraphQL schema: in <code>QueryRoot</code>, but also in <code>Post</code>, <code>User</code>, <code>Comment</code>, etc.</p> <p>This allows us to connect to some external API endpoint generated on runtime in the same GraphQL query, based on the data stored on some entity.</p> <p>For instance, we can iterate a list of users in our database and, for each, connect to an external system (such as a CRM) to retrieve further data about them.</p> <p>In this query, we generate the API endpoint using the <strong>Field to Input</strong> feature, and the <code>_arrayJoin</code> function field:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  users<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">pagination</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-symbol">limit</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">}</span>,\n    <span class="hljs-symbol">sort</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-symbol">order</span><span class="hljs-punctuation">:</span> ASC, <span class="hljs-symbol">by</span><span class="hljs-punctuation">:</span> ID <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n    id\n    <span class="hljs-symbol">endpoint</span><span class="hljs-punctuation">:</span> _arrayJoin<span class="hljs-punctuation">(</span><span class="hljs-symbol">values</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/users/&quot;</span>,\n      <span class="hljs-variable">$__id</span>,\n      <span class="hljs-string">&quot;?_fields=name&quot;</span>\n    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span>\n    _sendJSONObjectItemHTTPRequest<span class="hljs-punctuation">(</span><span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__endpoint</span> <span class="hljs-punctuation">}</span> <span class="hljs-punctuation">)</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>...producing:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;users&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;endpoint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/users/1?_fields=name&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;_sendJSONObjectItemHTTPRequest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;leo&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;_links&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n            <span class="hljs-attr">&quot;self&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n              <span class="hljs-punctuation">{</span>\n                <span class="hljs-attr">&quot;href&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/users/1&quot;</span>\n              <span class="hljs-punctuation">}</span>\n            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n            <span class="hljs-attr">&quot;collection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n              <span class="hljs-punctuation">{</span>\n                <span class="hljs-attr">&quot;href&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/users&quot;</span>\n              <span class="hljs-punctuation">}</span>\n            <span class="hljs-punctuation">]</span>\n          <span class="hljs-punctuation">}</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>\n      <span class="hljs-punctuation">{</span>\n        <span class="hljs-attr">&quot;id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;endpoint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/users/2?_fields=name&quot;</span><span class="hljs-punctuation">,</span>\n        <span class="hljs-attr">&quot;_sendJSONObjectItemHTTPRequest&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n          <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;themedemos&quot;</span><span class="hljs-punctuation">,</span>\n          <span class="hljs-attr">&quot;_links&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n            <span class="hljs-attr">&quot;self&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n              <span class="hljs-punctuation">{</span>\n                <span class="hljs-attr">&quot;href&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/users/2&quot;</span>\n              <span class="hljs-punctuation">}</span>\n            <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>\n            <span class="hljs-attr">&quot;collection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n              <span class="hljs-punctuation">{</span>\n                <span class="hljs-attr">&quot;href&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/users&quot;</span>\n              <span class="hljs-punctuation">}</span>\n            <span class="hljs-punctuation">]</span>\n          <span class="hljs-punctuation">}</span>\n        <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> '}}]);