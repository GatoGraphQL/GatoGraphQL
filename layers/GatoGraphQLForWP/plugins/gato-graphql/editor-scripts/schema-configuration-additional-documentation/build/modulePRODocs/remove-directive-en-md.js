(window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation=window.webpackJsonpGatoGraphQLSchemaConfigurationAdditionalDocumentation||[]).push([[32],{78:function(s,a){s.exports='<h1 id="remove-output-directive">Remove Output Directive</h1> <p>Add directive <code>@remove</code> to remove the output of a field from the response.</p> <h2 id="description">Description</h2> <p>The GraphQL spec indicates that the GraphQL response needs to match exactly the shape of the query. However, in certain circumstances we&#39;d rather avoid sending back the response of the field, because:</p> <ul> <li>We already know what it is, and by not sending it again we can boost performance</li> <li>It contains sensitive information (such as login credentials)</li> <li>An empty field can be distinguished from a <code>null</code> value</li> </ul> <h2 id="how-to-use">How to use</h2> <p>Directive <code>@remove</code> has argument <code>condition</code>, with which we can specify under what condition to remove the field. It has 3 possible values:</p> <ul> <li><code>ALWAYS</code> (default value): Remove it always</li> <li><code>IS_NULL</code>: Remove it whenever the value is <code>null</code></li> <li><code>IS_EMPTY</code>: Remove it whenever the value is empty</li> </ul> <p>For instance, in the query below, when a post does not have a featured image, field <code>featuredImage</code> will have value <code>null</code>. By adding <code>@remove(condition: IS_NULL)</code>, this value will not be added to the response:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">query</span> <span class="hljs-punctuation">{</span>\n  posts <span class="hljs-punctuation">{</span>\n    title\n    featuredImage <span class="hljs-meta">@remove</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">condition</span><span class="hljs-punctuation">:</span> IS_NULL<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n      src\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h2 id="examples">Examples</h2> <p>Let&#39;s say we want to retrieve some specific data from an external REST API endpoint, and we don&#39;t need the rest of the data. We can then use <code>@remove</code> to make the response payload smaller, thus boosting performance:</p> <ul> <li>Use field <code>_sendJSONObjectItemHTTPRequest</code> (from the <strong>Send HTTP Request Fields</strong> module) to connect to the REST API</li> <li>Process this data to extract the needed piece of information (via <strong>Field to Input</strong> and the <code>_objectProperty</code> field from <strong>Function Fields</strong>)</li> <li><code>@remove</code> the original data from the REST endpoint</li> </ul> <p>This query ties everything together:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">postData</span><span class="hljs-punctuation">:</span> _sendJSONObjectItemHTTPRequest<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://newapi.getpop.org/wp-json/wp/v2/posts/1&quot;</span>\n  <span class="hljs-punctuation">)</span> <span class="hljs-meta">@remove</span>\n  <span class="hljs-symbol">renderedTitle</span><span class="hljs-punctuation">:</span> _objectProperty<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">object</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__postData</span>,\n    <span class="hljs-symbol">by</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">path</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;title.rendered&quot;</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p>In the response to this query, field <code>postData</code> has been removed:</p> <pre><code class="hljs language-json"><span class="hljs"><span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;data&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n    <span class="hljs-attr">&quot;renderedTitle&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Hello world!&quot;</span>\n  <span class="hljs-punctuation">}</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <p><strong>Please notice:</strong> <code>@remove</code> takes place at the very end of the resolution of all the fields under the same node. That&#39;s why, in the query above, the field <code>renderedTitle</code> is processed before field <code>postData</code> is <code>@remove</code>d.</p> <hr> <p>This example connects to the GitHub API to retrieve the artifacts available in a private repository, and avoids printing the user&#39;s credentials in the response:</p> <pre><code class="hljs language-graphql"><span class="hljs"><span class="hljs-keyword">query</span> RetrieveGitHubActionArtifacts<span class="hljs-punctuation">(</span>\n  <span class="hljs-variable">$repoOwner</span>: String<span class="hljs-punctuation">!</span>\n  <span class="hljs-variable">$repoProject</span>: String<span class="hljs-punctuation">!</span>\n<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span>\n  <span class="hljs-symbol">githubAccessToken</span><span class="hljs-punctuation">:</span> _env<span class="hljs-punctuation">(</span><span class="hljs-symbol">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;GITHUB_ACCESS_TOKEN&quot;</span><span class="hljs-punctuation">)</span>\n    <span class="hljs-meta">@remove</span>\n\n  <span class="hljs-comment"># Create the authorization header to send to GitHub</span>\n  <span class="hljs-symbol">authorizationHeader</span><span class="hljs-punctuation">:</span> _sprintf<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">string</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Bearer %s&quot;</span>\n    <span class="hljs-comment"># &quot;Field to Input&quot; feature to access value from the field above</span>\n    <span class="hljs-symbol">values</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">$__githubAccessToken</span>]\n  <span class="hljs-punctuation">)</span>\n    <span class="hljs-meta">@remove</span>\n\n  <span class="hljs-comment"># Create the authorization header to send to GitHub</span>\n  <span class="hljs-symbol">githubRequestHeaders</span><span class="hljs-punctuation">:</span> _echo<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">value</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span>\n      <span class="hljs-punctuation">{</span> <span class="hljs-symbol">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Accept&quot;</span>, <span class="hljs-symbol">value</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.github+json&quot;</span> <span class="hljs-punctuation">}</span>\n      <span class="hljs-punctuation">{</span> <span class="hljs-symbol">name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Authorization&quot;</span>, <span class="hljs-symbol">value</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__authorizationHeader</span> <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">]</span>\n  <span class="hljs-punctuation">)</span>\n    <span class="hljs-meta">@remove</span>\n\n  <span class="hljs-symbol">githubAPIEndpoint</span><span class="hljs-punctuation">:</span> _sprintf<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">string</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://api.github.com/repos/%s/%s/actions/artifacts&quot;</span>\n    <span class="hljs-symbol">values</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-variable">$repoOwner</span>, <span class="hljs-variable">$repoProject</span>]\n  <span class="hljs-punctuation">)</span>\n\n  <span class="hljs-comment"># Use the field from &quot;Send HTTP Request Fields&quot; to connect to GitHub</span>\n  <span class="hljs-symbol">gitHubArtifactData</span><span class="hljs-punctuation">:</span> _sendJSONObjectItemHTTPRequest<span class="hljs-punctuation">(</span>\n    <span class="hljs-symbol">input</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span>\n      <span class="hljs-symbol">url</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__githubAPIEndpoint</span>\n      <span class="hljs-symbol">options</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span> <span class="hljs-symbol">headers</span><span class="hljs-punctuation">:</span> <span class="hljs-variable">$__githubRequestHeaders</span> <span class="hljs-punctuation">}</span>\n    <span class="hljs-punctuation">}</span>\n  <span class="hljs-punctuation">)</span>\n<span class="hljs-punctuation">}</span></span></code></pre> <h2 id="graphql-spec">GraphQL spec</h2> <p>This functionality is currently not part of the GraphQL spec, but it has been requested:</p> <ul> <li><a href="https://github.com/graphql/graphql-spec/issues/275#issuecomment-338538911" target="_blank">Issue #275 - @include(unless null) ?</a></li> <li><a href="https://github.com/graphql/graphql-spec/issues/766" target="_blank">Issue #766 - GraphQL query: skip value field if null</a></li> </ul> '}}]);