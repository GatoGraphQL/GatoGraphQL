########################################################################
# 
# Variables:
#   - postId: ID of the post to modify
# 
# *********************************************************************
#
# === Description ===
#
# This Persisted GraphQL query replaces all `http` URLs with `https`
# in the image sources from the post's HTML
#
# *********************************************************************
#
# More info:
#   - https://gatographql.com/tutorial/search-replace-and-store-again/#heading-replacing-http-with-https
#
########################################################################

query GetPostData($postId: ID!) {
  post(by: { id: $postId }, status: any) {
    id
    rawContent
    adaptedRawContent: _strRegexReplace(
      searchRegex: "/<img(\\s+)?([^>]*?\\s+?)?src=([\"'])http:\\/\\/(.*?)/"
      replaceWith: "<img$1$2src=$3https://$4$3"
      in: $__rawContent
    )
      @export(as: "adaptedRawContent")
  }
}

mutation ReplaceHttpWithHttpsInImageSourcesInPost($postId: ID!)
  @depends(on: "GetPostData")
{
  updatePost(input: {
    id: $postId,
    contentAs: { html: $adaptedRawContent },
  }) {
    status
    errors {
      __typename
      ...on ErrorPayload {
        message
      }
    }
    post {
      id
      title
      rawContent
    }
  }
}