########################################################################
# 
# Variables:
#   - urls: The URLs of the external pages to import into WordPress
#   - contentMatchInnerRegex: The regular subexpression to extract the content from the HTML, to target a specific tag inside of <body>. It must have 1 parenthesis `()`, from which it'll capture the content. It is `(.*?)` by default (i.e. it captures all content in <body>)
#
# *********************************************************************
#
# === Description ===
#
# This query imports the HTML pages from the given URLs as new posts
# in WordPress.
#
# From each URL, it retrieves the title from <title>...</title> in the meta,
# and the content from <body>...</body>, or customized to some specific
# inner HTML element using the `$contentMatchInnerRegex` variable.
#
# With `$contentMatchInnerRegex`, we can target what specific subportion of
# the `<body>`'s HTML to capture.
#
# For instance, if the content must be extracted from:
#
#   `<article class="main">...</article>`
#
# ...we can capture it with:
#
#   `{ "contentMatchInnerRegex": ".*?<\\s*?article\\b[^>]*>(.*?)<\\/article\\b[^>]*>.*?" }`
#
########################################################################
query GenerateURLInputs(
  $urls: [URL!]!
  $contentMatchInnerRegex: String! = "(.*?)"
) {
  urlInputs: _echo(value: $urls)
    @underEachArrayItem(
      passValueOnwardsAs: "url"
    )
      @applyField(
        name: "_echo",
        arguments: {
          value: {
            url: $url,
            method: GET
          }
        },
        setResultInResponse: true
      )
    @export(as: "urlInputs")
    @remove
  contentMatchRegex: _sprintf(
    string: "/(?:<!DOCTYPE html>)?<\\s*?html\\b[^>]*>.*?<\\s*?body\\b[^>]*>%s<\\/body\\b[^>]*>.*?<\\/html\\b[^>]*>/sim",
    values: [$contentMatchInnerRegex]
  )
    @export(as: "contentMatchRegex")
}

query RequestPages
  @depends(on: "GenerateURLInputs")
{
  urlContents: _sendHTTPRequests(inputs: $urlInputs, async: false) {
    statusCode
    body
      @remove
    title: _strRegexReplace(
      searchRegex: "/(?:<!DOCTYPE html>)?<\\s*?html\\b[^>]*>.*?<head\\b[^>]*>.*?<\\s*?title\\b[^>]*>(.*?)<\\/title\\b[^>]*>.*?<\\/head\\b[^>]*>(.*?)<\\/html\\b[^>]*>/sim"
      replaceWith: "$1"
      in: $__body
    )
    content: _strRegexReplace(
      searchRegex: $contentMatchRegex
      replaceWith: "$1"
      in: $__body
    )
    createPostInput: _echo(value: {
      status: publish,
      title: $__title
      contentAs: {
        html: $__content
      }
    })
      @export(as: "createPostInputs", type: LIST)
  }
}

mutation CreatePostsFromURLs
  @depends(on: "RequestPages")
{
  createPosts(inputs: $createPostInputs) {
    status
    errors {
      __typename
      ...on ErrorPayload {
        message
      }
    }
    post {
      id
      status
      title
      content
    }
  }
}