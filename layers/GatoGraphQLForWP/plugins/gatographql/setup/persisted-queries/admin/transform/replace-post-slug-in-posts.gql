########################################################################
# 
# Variables:
#   - oldPostSlug: The old post or page slug
#   - newPostSlug: The new post or page slug
#
# *********************************************************************
#
# === Description ===
#
# After changing the slug of a post or page, execute this Persisted
# GraphQL query to convert all content to point to the new URL.
#
# *********************************************************************
# 
# More info:
#   - https://gatographql.com/tutorial/site-migrations/#heading-adapting-content-to-a-new-post-or-page-url
#
########################################################################

query ExportData(
  $oldPostSlug: String!
  $newPostSlug: String!
) {
  siteURL: optionValue(name: "siteurl")

  oldPostURL: _strAppend(
    after: $__siteURL,
    append: $oldPostSlug
  ) @export(as: "oldPostURL")

  newPostURL: _strAppend(
    after: $__siteURL,
    append: $newPostSlug
  ) @export(as: "newPostURL")
}

mutation ReplaceOldWithNewSlugInPosts
  @depends(on: "ExportData")
{
  posts(
    filter: {
      search: $oldPostURL
    },
    pagination: {
      limit: -1
    }
  ) {
    id
    rawContent
    adaptedRawContent: _strReplace(
      search: $oldPostURL
      replaceWith: $newPostURL
      in: $__rawContent
    )
    update(input: {
      contentAs: { html: $__adaptedRawContent }
    }) {
      status
      errors {
        __typename
        ...on ErrorPayload {
          message
        }
      }
      post {
        id
        rawContent
      }
    }
  }
}