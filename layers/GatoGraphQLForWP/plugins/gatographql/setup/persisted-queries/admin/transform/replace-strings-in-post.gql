########################################################################
# 
# Variables:
#   - postId: The ID of the post to do the search and replace
#   - replaceFrom: The list of strings to search
#   - replaceTo: The list of strings to replace with
# 
# *********************************************************************
#
# === Description ===
#
# This Persisted GraphQL query retrieves a post, replaces all
# occurrences of a list of strings with another list of strings
# in the post's content and title, and stores the post again.
#
# *********************************************************************
#
# More info:
#   - https://gatographql.com/tutorial/search-replace-and-store-again/
#
########################################################################

query GetPostData(
  $postId: ID!
  $replaceFrom: [String!]!,
  $replaceTo: [String!]!
) {
  post(by: { id: $postId }, status: any) {
    title
    adaptedPostTitle: _strReplaceMultiple(
      search: $replaceFrom
      replaceWith: $replaceTo
      in: $__title
    )
      @export(as: "adaptedPostTitle")

    rawContent
    adaptedRawContent: _strReplaceMultiple(
      search: $replaceFrom
      replaceWith: $replaceTo
      in: $__rawContent
    )
      @export(as: "adaptedRawContent")
  }
}

mutation ReplaceStringsInPost($postId: ID!)
  @depends(on: "GetPostData")
{
  updatePost(input: {
    id: $postId,
    title: $adaptedPostTitle,
    contentAs: { html: $adaptedRawContent },
  }) {
    status
    errors {
      __typename
      ...on ErrorPayload {
        message
      }
    }
    post {
      id
      title
      rawContent
    }
  }
}