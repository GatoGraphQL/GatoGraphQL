mutation TestCreateMediaItemFromContents(
  $username: String! = "editor",
  $mediaItemSlug: String!,
  $authorID: ID,
  $caption: String,
  $customPostID: ID,
  $description: String,
  $slug: String,
  $title: String,
  $altText: String,
  $mimeType: String,
) {
  loginUser(by: {
    credentials: {
      usernameOrEmail: $username,
      password: "11111111"
    }
  }) {
    status
    errors {
      __typename
    }
  }

  createMediaItem(input: {
    from: {
      mediaItemBy: {
        slug: $mediaItemSlug
      }
    }
    authorID: $authorID
    caption: $caption
    customPostID: $customPostID
    description: $description
    slug: $slug
    title: $title
    altText: $altText
    mimeType: $mimeType
  }) {
    # mediaItemSlug
    status
    errors {
      __typename
      ...on ErrorPayload {
        message
      }
    }
    mediaItem {
      ...MediaItemData
    }
  }

  createMediaItems(inputs: [
    {
      from: {
        mediaItemBy: {
          slug: $mediaItemSlug
        }
      }
      authorID: $authorID
      caption: $caption
      customPostID: $customPostID
      description: $description
      slug: $slug
      title: $title
      altText: $altText
      mimeType: $mimeType
    },
    {
      from: {
        mediaItemBy: {
          slug: $mediaItemSlug
        }
      }
      authorID: $authorID
      caption: $caption
      customPostID: $customPostID
      description: $description
      slug: $slug
      title: $title
      altText: $altText
      mimeType: $mimeType
    }
  ]) {
    # mediaItemSlug
    status
    errors {
      __typename
      ...on ErrorPayload {
        message
      }
    }
    mediaItem {
      ...MediaItemData
    }
  }

  createMediaItemsStopExecuting: createMediaItems(stopExecutingMutationItemsOnFirstError: true, inputs: [
    {
      from: {
        mediaItemBy: {
          slug: $mediaItemSlug
        }
      }
      authorID: $authorID
      caption: $caption
      customPostID: $customPostID
      description: $description
      slug: $slug
      title: $title
      altText: $altText
      mimeType: $mimeType
    },
    {
      from: {
        mediaItemBy: {
          slug: $mediaItemSlug
        }
      }
      authorID: $authorID
      caption: $caption
      customPostID: $customPostID
      description: $description
      slug: $slug
      title: $title
      altText: $altText
      mimeType: $mimeType
    }
  ]) {
    # mediaItemSlug
    status
    errors {
      __typename
      ...on ErrorPayload {
        message
      }
    }
    mediaItem {
      ...MediaItemData
    }
  }

  logoutUser {
    status
  }
}

fragment MediaItemData on Media {
  parentCustomPost {
    id
    title
  }
  altText
  author {
    id
    name
  } 
  caption
  # date
  # dateStr(format: "F j")
  description
  height
  # id
  mimeType
  # modifiedDate
  # modifiedDateStr
  sizes
  slug
  src
  # srcSet
  title
  # url
  # urlPath
  width
}