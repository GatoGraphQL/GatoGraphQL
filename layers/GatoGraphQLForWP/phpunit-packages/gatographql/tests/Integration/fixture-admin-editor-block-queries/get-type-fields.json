{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "AccessToMetaKeyIsNotAllowedErrorPayload",
          "namespacedName": "AccessToMetaKeyIsNotAllowedErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"Access to the meta key is not allowed\""
        },
        {
          "name": "CategoryTermDoesNotExistErrorPayload",
          "namespacedName": "CategoryTermDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The requested category does not exist\""
        },
        {
          "name": "Comment",
          "namespacedName": "Comment",
          "fields": [
            {
              "name": "approved"
            },
            {
              "name": "author"
            },
            {
              "name": "authorEmail"
            },
            {
              "name": "authorIP"
            },
            {
              "name": "authorName"
            },
            {
              "name": "authorURL"
            },
            {
              "name": "content"
            },
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "date"
            },
            {
              "name": "dateStr"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "karma"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "parent"
            },
            {
              "name": "rawContent"
            },
            {
              "name": "responseCount"
            },
            {
              "name": "responses"
            },
            {
              "name": "self"
            },
            {
              "name": "status"
            },
            {
              "name": "type"
            }
          ],
          "kind": "OBJECT",
          "description": "Comments added to custom posts"
        },
        {
          "name": "CommentAuthorEmailIsMissingErrorPayload",
          "namespacedName": "CommentAuthorEmailIsMissingErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The comment's author email is missing\""
        },
        {
          "name": "CommentAuthorNameIsMissingErrorPayload",
          "namespacedName": "CommentAuthorNameIsMissingErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The comment's author name is missing\""
        },
        {
          "name": "CommentDoesNotExistErrorPayload",
          "namespacedName": "CommentDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The comment does not exist\""
        },
        {
          "name": "CommentParentCommentDoesNotExistErrorPayload",
          "namespacedName": "CommentParentCommentDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The comment's parent does not exist\""
        },
        {
          "name": "CommentsAreNotOpenForCustomPostErrorPayload",
          "namespacedName": "CommentsAreNotOpenForCustomPostErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"Comments are not open for the custom post\""
        },
        {
          "name": "CommentsAreNotSupportedByCustomPostTypeErrorPayload",
          "namespacedName": "CommentsAreNotSupportedByCustomPostTypeErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"Comments are not supported by the custom post type\""
        },
        {
          "name": "CustomPostDoesNotExistErrorPayload",
          "namespacedName": "CustomPostDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The requested custom post does not exist\""
        },
        {
          "name": "CustomPostDoesNotHaveExpectedTypeErrorPayload",
          "namespacedName": "CustomPostDoesNotHaveExpectedTypeErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The requested custom post does not have the expected type\""
        },
        {
          "name": "EntityMetaAlreadyHasSingleEntryErrorPayload",
          "namespacedName": "EntityMetaAlreadyHasSingleEntryErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The taxonomy term already has the single meta entry\""
        },
        {
          "name": "EntityMetaEntryAlreadyHasValueErrorPayload",
          "namespacedName": "EntityMetaEntryAlreadyHasValueErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The taxonomy term already has the meta entry with the provided update value\""
        },
        {
          "name": "EntityMetaKeyDoesNotExistErrorPayload",
          "namespacedName": "EntityMetaKeyDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The taxonomy term doesn't have a meta entry with that key\""
        },
        {
          "name": "EntityMetaKeyWithValueDoesNotExistErrorPayload",
          "namespacedName": "EntityMetaKeyWithValueDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The taxonomy term doesn't have a meta entry with that key\""
        },
        {
          "name": "FeaturedImageIsNotSupportedByCustomPostTypeErrorPayload",
          "namespacedName": "FeaturedImageIsNotSupportedByCustomPostTypeErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"Setting the featured image is not supported by the custom post type\""
        },
        {
          "name": "GeneralBlock",
          "namespacedName": "GeneralBlock",
          "fields": [
            {
              "name": "attributes"
            },
            {
              "name": "contentSource"
            },
            {
              "name": "innerBlocks"
            },
            {
              "name": "name"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a Block that works for all blocks, retrieving the block attributes as a non-strictly-typed JSON object"
        },
        {
          "name": "GenericCategory",
          "namespacedName": "GenericCategory",
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "customPostCount"
            },
            {
              "name": "customPosts"
            },
            {
              "name": "description"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "name"
            },
            {
              "name": "parent"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "slugPath"
            },
            {
              "name": "taxonomy"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            }
          ],
          "kind": "OBJECT",
          "description": "A category that does not have its own type in the schema"
        },
        {
          "name": "GenericCustomPost",
          "namespacedName": "GenericCustomPost",
          "fields": [
            {
              "name": "areCommentsOpen"
            },
            {
              "name": "author"
            },
            {
              "name": "blockDataItems"
            },
            {
              "name": "blockFlattenedDataItems"
            },
            {
              "name": "blocks"
            },
            {
              "name": "categories"
            },
            {
              "name": "categoryCount"
            },
            {
              "name": "categoryNames"
            },
            {
              "name": "commentCount"
            },
            {
              "name": "comments"
            },
            {
              "name": "content"
            },
            {
              "name": "customPostType"
            },
            {
              "name": "date"
            },
            {
              "name": "dateStr"
            },
            {
              "name": "excerpt"
            },
            {
              "name": "featuredImage"
            },
            {
              "name": "globalID"
            },
            {
              "name": "hasComments"
            },
            {
              "name": "hasFeaturedImage"
            },
            {
              "name": "id"
            },
            {
              "name": "isStatus"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "modifiedDate"
            },
            {
              "name": "modifiedDateStr"
            },
            {
              "name": "rawContent"
            },
            {
              "name": "rawExcerpt"
            },
            {
              "name": "rawTitle"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "status"
            },
            {
              "name": "tagCount"
            },
            {
              "name": "tagNames"
            },
            {
              "name": "tags"
            },
            {
              "name": "title"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            },
            {
              "name": "wpAdminEditURL"
            }
          ],
          "kind": "OBJECT",
          "description": "A custom post that does not have its own type in the schema"
        },
        {
          "name": "GenericErrorPayload",
          "namespacedName": "GenericErrorPayload",
          "fields": [
            {
              "name": "code"
            },
            {
              "name": "data"
            },
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Generic error payload"
        },
        {
          "name": "GenericTag",
          "namespacedName": "GenericTag",
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "customPostCount"
            },
            {
              "name": "customPosts"
            },
            {
              "name": "description"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "name"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "taxonomy"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            }
          ],
          "kind": "OBJECT",
          "description": "A tag that does not have its own type in the schema"
        },
        {
          "name": "InvalidUserEmailErrorPayload",
          "namespacedName": "InvalidUserEmailErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"No user is registered with the provided email\""
        },
        {
          "name": "InvalidUsernameErrorPayload",
          "namespacedName": "InvalidUsernameErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"No user is registered with the provided username\""
        },
        {
          "name": "LoggedInUserHasNoAssigningTermsToTaxonomyCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoAssigningTermsToTaxonomyCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to assign terms to a taxonomy\""
        },
        {
          "name": "LoggedInUserHasNoDeletingTaxonomyTermCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoDeletingTaxonomyTermCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to delete a taxonomy term\""
        },
        {
          "name": "LoggedInUserHasNoEditingCustomPostCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoEditingCustomPostCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to edit custom posts\""
        },
        {
          "name": "LoggedInUserHasNoEditingMediaCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoEditingMediaCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The user cannot edit media items\""
        },
        {
          "name": "LoggedInUserHasNoEditingPageCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoEditingPageCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to edit pages\""
        },
        {
          "name": "LoggedInUserHasNoEditingTaxonomyTermsCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoEditingTaxonomyTermsCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to edit taxonomy terms\""
        },
        {
          "name": "LoggedInUserHasNoPermissionToEditCommentErrorPayload",
          "namespacedName": "LoggedInUserHasNoPermissionToEditCommentErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to edit the comment\""
        },
        {
          "name": "LoggedInUserHasNoPermissionToEditCustomPostErrorPayload",
          "namespacedName": "LoggedInUserHasNoPermissionToEditCustomPostErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to edit the requested custom post\""
        },
        {
          "name": "LoggedInUserHasNoPermissionToEditMediaItemErrorPayload",
          "namespacedName": "LoggedInUserHasNoPermissionToEditMediaItemErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The user has no permission to edit the media item\""
        },
        {
          "name": "LoggedInUserHasNoPermissionToEditUserErrorPayload",
          "namespacedName": "LoggedInUserHasNoPermissionToEditUserErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to edit the user\""
        },
        {
          "name": "LoggedInUserHasNoPublishingCustomPostCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoPublishingCustomPostCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to publish custom posts\""
        },
        {
          "name": "LoggedInUserHasNoPublishingPageCapabilityErrorPayload",
          "namespacedName": "LoggedInUserHasNoPublishingPageCapabilityErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The logged-in user has no permission to publish pages\""
        },
        {
          "name": "Media",
          "namespacedName": "Media",
          "fields": [
            {
              "name": "altText"
            },
            {
              "name": "author"
            },
            {
              "name": "caption"
            },
            {
              "name": "date"
            },
            {
              "name": "dateStr"
            },
            {
              "name": "description"
            },
            {
              "name": "globalID"
            },
            {
              "name": "height"
            },
            {
              "name": "id"
            },
            {
              "name": "mimeType"
            },
            {
              "name": "modifiedDate"
            },
            {
              "name": "modifiedDateStr"
            },
            {
              "name": "parentCustomPost"
            },
            {
              "name": "self"
            },
            {
              "name": "sizes"
            },
            {
              "name": "slug"
            },
            {
              "name": "src"
            },
            {
              "name": "srcPath"
            },
            {
              "name": "srcSet"
            },
            {
              "name": "title"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            },
            {
              "name": "width"
            }
          ],
          "kind": "OBJECT",
          "description": "Media elements (such as images, videos, etc), attached to a post or independent"
        },
        {
          "name": "MediaItemDoesNotExistErrorPayload",
          "namespacedName": "MediaItemDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The requested media item does not exist\""
        },
        {
          "name": "Menu",
          "namespacedName": "Menu",
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "itemDataEntries"
            },
            {
              "name": "items"
            },
            {
              "name": "locations"
            },
            {
              "name": "name"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a navigation menu"
        },
        {
          "name": "MenuItem",
          "namespacedName": "MenuItem",
          "fields": [
            {
              "name": "children"
            },
            {
              "name": "classes"
            },
            {
              "name": "description"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "label"
            },
            {
              "name": "linkRelationship"
            },
            {
              "name": "localURLPath"
            },
            {
              "name": "objectID"
            },
            {
              "name": "parentID"
            },
            {
              "name": "rawTitle"
            },
            {
              "name": "self"
            },
            {
              "name": "target"
            },
            {
              "name": "title"
            },
            {
              "name": "url"
            }
          ],
          "kind": "OBJECT",
          "description": "Items (links, pages, etc) added to a menu"
        },
        {
          "name": "MutationRoot",
          "namespacedName": "MutationRoot",
          "fields": [
            {
              "name": "addCategoryMeta"
            },
            {
              "name": "addCategoryMetas"
            },
            {
              "name": "addCommentMeta"
            },
            {
              "name": "addCommentMetas"
            },
            {
              "name": "addCommentToCustomPost"
            },
            {
              "name": "addCommentToCustomPosts"
            },
            {
              "name": "addCustomPostMeta"
            },
            {
              "name": "addCustomPostMetas"
            },
            {
              "name": "addPostCategoryMeta"
            },
            {
              "name": "addPostCategoryMetas"
            },
            {
              "name": "addPostTagMeta"
            },
            {
              "name": "addPostTagMetas"
            },
            {
              "name": "addTagMeta"
            },
            {
              "name": "addTagMetas"
            },
            {
              "name": "addUserMeta"
            },
            {
              "name": "addUserMetas"
            },
            {
              "name": "createCategories"
            },
            {
              "name": "createCategory"
            },
            {
              "name": "createCustomPost"
            },
            {
              "name": "createCustomPosts"
            },
            {
              "name": "createMediaItem"
            },
            {
              "name": "createMediaItems"
            },
            {
              "name": "createPage"
            },
            {
              "name": "createPages"
            },
            {
              "name": "createPost"
            },
            {
              "name": "createPostCategories"
            },
            {
              "name": "createPostCategory"
            },
            {
              "name": "createPostTag"
            },
            {
              "name": "createPostTags"
            },
            {
              "name": "createPosts"
            },
            {
              "name": "createTag"
            },
            {
              "name": "createTags"
            },
            {
              "name": "deleteCategories"
            },
            {
              "name": "deleteCategory"
            },
            {
              "name": "deleteCategoryMeta"
            },
            {
              "name": "deleteCategoryMetas"
            },
            {
              "name": "deleteCommentMeta"
            },
            {
              "name": "deleteCommentMetas"
            },
            {
              "name": "deleteCustomPostMeta"
            },
            {
              "name": "deleteCustomPostMetas"
            },
            {
              "name": "deletePostCategories"
            },
            {
              "name": "deletePostCategory"
            },
            {
              "name": "deletePostCategoryMeta"
            },
            {
              "name": "deletePostCategoryMetas"
            },
            {
              "name": "deletePostTag"
            },
            {
              "name": "deletePostTagMeta"
            },
            {
              "name": "deletePostTagMetas"
            },
            {
              "name": "deletePostTags"
            },
            {
              "name": "deleteTag"
            },
            {
              "name": "deleteTagMeta"
            },
            {
              "name": "deleteTagMetas"
            },
            {
              "name": "deleteTags"
            },
            {
              "name": "deleteUserMeta"
            },
            {
              "name": "deleteUserMetas"
            },
            {
              "name": "loginUser"
            },
            {
              "name": "logoutUser"
            },
            {
              "name": "removeFeaturedImageFromCustomPost"
            },
            {
              "name": "removeFeaturedImageFromCustomPosts"
            },
            {
              "name": "replyComment"
            },
            {
              "name": "replyComments"
            },
            {
              "name": "setCategoriesOnCustomPost"
            },
            {
              "name": "setCategoriesOnCustomPosts"
            },
            {
              "name": "setCategoriesOnPost"
            },
            {
              "name": "setCategoriesOnPosts"
            },
            {
              "name": "setCategoryMeta"
            },
            {
              "name": "setCategoryMetas"
            },
            {
              "name": "setCommentMeta"
            },
            {
              "name": "setCommentMetas"
            },
            {
              "name": "setCustomPostMeta"
            },
            {
              "name": "setCustomPostMetas"
            },
            {
              "name": "setFeaturedImageOnCustomPost"
            },
            {
              "name": "setFeaturedImageOnCustomPosts"
            },
            {
              "name": "setPostCategoryMeta"
            },
            {
              "name": "setPostCategoryMetas"
            },
            {
              "name": "setPostTagMeta"
            },
            {
              "name": "setPostTagMetas"
            },
            {
              "name": "setTagMeta"
            },
            {
              "name": "setTagMetas"
            },
            {
              "name": "setTagsOnCustomPost"
            },
            {
              "name": "setTagsOnCustomPosts"
            },
            {
              "name": "setTagsOnPost"
            },
            {
              "name": "setTagsOnPosts"
            },
            {
              "name": "setUserMeta"
            },
            {
              "name": "setUserMetas"
            },
            {
              "name": "updateCategories"
            },
            {
              "name": "updateCategory"
            },
            {
              "name": "updateCategoryMeta"
            },
            {
              "name": "updateCategoryMetas"
            },
            {
              "name": "updateCommentMeta"
            },
            {
              "name": "updateCommentMetas"
            },
            {
              "name": "updateCustomPost"
            },
            {
              "name": "updateCustomPostMeta"
            },
            {
              "name": "updateCustomPostMetas"
            },
            {
              "name": "updateCustomPosts"
            },
            {
              "name": "updateMediaItem"
            },
            {
              "name": "updateMediaItems"
            },
            {
              "name": "updatePage"
            },
            {
              "name": "updatePages"
            },
            {
              "name": "updatePost"
            },
            {
              "name": "updatePostCategories"
            },
            {
              "name": "updatePostCategory"
            },
            {
              "name": "updatePostCategoryMeta"
            },
            {
              "name": "updatePostCategoryMetas"
            },
            {
              "name": "updatePostTag"
            },
            {
              "name": "updatePostTagMeta"
            },
            {
              "name": "updatePostTagMetas"
            },
            {
              "name": "updatePostTags"
            },
            {
              "name": "updatePosts"
            },
            {
              "name": "updateTag"
            },
            {
              "name": "updateTagMeta"
            },
            {
              "name": "updateTagMetas"
            },
            {
              "name": "updateTags"
            },
            {
              "name": "updateUserMeta"
            },
            {
              "name": "updateUserMetas"
            }
          ],
          "kind": "OBJECT",
          "description": "Mutation type, starting from which mutations are executed"
        },
        {
          "name": "Page",
          "namespacedName": "Page",
          "fields": [
            {
              "name": "areCommentsOpen"
            },
            {
              "name": "author"
            },
            {
              "name": "blockDataItems"
            },
            {
              "name": "blockFlattenedDataItems"
            },
            {
              "name": "blocks"
            },
            {
              "name": "childCount"
            },
            {
              "name": "children"
            },
            {
              "name": "commentCount"
            },
            {
              "name": "comments"
            },
            {
              "name": "content"
            },
            {
              "name": "customPostType"
            },
            {
              "name": "date"
            },
            {
              "name": "dateStr"
            },
            {
              "name": "excerpt"
            },
            {
              "name": "featuredImage"
            },
            {
              "name": "globalID"
            },
            {
              "name": "hasComments"
            },
            {
              "name": "hasFeaturedImage"
            },
            {
              "name": "id"
            },
            {
              "name": "isStatus"
            },
            {
              "name": "menuOrder"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "modifiedDate"
            },
            {
              "name": "modifiedDateStr"
            },
            {
              "name": "parent"
            },
            {
              "name": "rawContent"
            },
            {
              "name": "rawExcerpt"
            },
            {
              "name": "rawTitle"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "status"
            },
            {
              "name": "title"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            },
            {
              "name": "wpAdminEditURL"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a page"
        },
        {
          "name": "PasswordIsIncorrectErrorPayload",
          "namespacedName": "PasswordIsIncorrectErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The password is incorrect\""
        },
        {
          "name": "Post",
          "namespacedName": "Post",
          "fields": [
            {
              "name": "areCommentsOpen"
            },
            {
              "name": "author"
            },
            {
              "name": "blockDataItems"
            },
            {
              "name": "blockFlattenedDataItems"
            },
            {
              "name": "blocks"
            },
            {
              "name": "categories"
            },
            {
              "name": "categoryCount"
            },
            {
              "name": "categoryNames"
            },
            {
              "name": "commentCount"
            },
            {
              "name": "comments"
            },
            {
              "name": "content"
            },
            {
              "name": "customPostType"
            },
            {
              "name": "date"
            },
            {
              "name": "dateStr"
            },
            {
              "name": "excerpt"
            },
            {
              "name": "featuredImage"
            },
            {
              "name": "globalID"
            },
            {
              "name": "hasComments"
            },
            {
              "name": "hasFeaturedImage"
            },
            {
              "name": "id"
            },
            {
              "name": "isStatus"
            },
            {
              "name": "isSticky"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "modifiedDate"
            },
            {
              "name": "modifiedDateStr"
            },
            {
              "name": "postFormat"
            },
            {
              "name": "rawContent"
            },
            {
              "name": "rawExcerpt"
            },
            {
              "name": "rawTitle"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "status"
            },
            {
              "name": "tagCount"
            },
            {
              "name": "tagNames"
            },
            {
              "name": "tags"
            },
            {
              "name": "title"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            },
            {
              "name": "wpAdminEditURL"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a post"
        },
        {
          "name": "PostCategory",
          "namespacedName": "PostCategory",
          "fields": [
            {
              "name": "childCount"
            },
            {
              "name": "childNames"
            },
            {
              "name": "children"
            },
            {
              "name": "count"
            },
            {
              "name": "description"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "name"
            },
            {
              "name": "parent"
            },
            {
              "name": "postCount"
            },
            {
              "name": "posts"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "slugPath"
            },
            {
              "name": "taxonomy"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a category, added to a post (taxonomy: \"category\")"
        },
        {
          "name": "PostTag",
          "namespacedName": "PostTag",
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "description"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "name"
            },
            {
              "name": "postCount"
            },
            {
              "name": "posts"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "taxonomy"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a tag, added to a post (taxonomy: \"post_tag\")"
        },
        {
          "name": "QueryRoot",
          "namespacedName": "QueryRoot",
          "fields": [
            {
              "name": "capabilities"
            },
            {
              "name": "categories"
            },
            {
              "name": "category"
            },
            {
              "name": "categoryCount"
            },
            {
              "name": "categoryNames"
            },
            {
              "name": "comment"
            },
            {
              "name": "commentCount"
            },
            {
              "name": "comments"
            },
            {
              "name": "customPost"
            },
            {
              "name": "customPostCount"
            },
            {
              "name": "customPosts"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "imageSizeNames"
            },
            {
              "name": "isGutenbergEditorEnabled"
            },
            {
              "name": "isUserLoggedIn"
            },
            {
              "name": "loggedInUserID"
            },
            {
              "name": "me"
            },
            {
              "name": "mediaItem"
            },
            {
              "name": "mediaItemCount"
            },
            {
              "name": "mediaItems"
            },
            {
              "name": "menu"
            },
            {
              "name": "menuCount"
            },
            {
              "name": "menus"
            },
            {
              "name": "myComment"
            },
            {
              "name": "myCommentCount"
            },
            {
              "name": "myComments"
            },
            {
              "name": "myCustomPost"
            },
            {
              "name": "myCustomPostCount"
            },
            {
              "name": "myCustomPosts"
            },
            {
              "name": "myMediaItem"
            },
            {
              "name": "myMediaItemCount"
            },
            {
              "name": "myMediaItems"
            },
            {
              "name": "myPage"
            },
            {
              "name": "myPageCount"
            },
            {
              "name": "myPages"
            },
            {
              "name": "myPost"
            },
            {
              "name": "myPostCount"
            },
            {
              "name": "myPosts"
            },
            {
              "name": "optionObjectValue"
            },
            {
              "name": "optionValue"
            },
            {
              "name": "optionValues"
            },
            {
              "name": "page"
            },
            {
              "name": "pageBuilders"
            },
            {
              "name": "pageCount"
            },
            {
              "name": "pages"
            },
            {
              "name": "post"
            },
            {
              "name": "postCategories"
            },
            {
              "name": "postCategory"
            },
            {
              "name": "postCategoryCount"
            },
            {
              "name": "postCategoryNames"
            },
            {
              "name": "postCount"
            },
            {
              "name": "postTag"
            },
            {
              "name": "postTagCount"
            },
            {
              "name": "postTagNames"
            },
            {
              "name": "postTags"
            },
            {
              "name": "posts"
            },
            {
              "name": "roleNames"
            },
            {
              "name": "roles"
            },
            {
              "name": "self"
            },
            {
              "name": "siteLanguage"
            },
            {
              "name": "siteLocale"
            },
            {
              "name": "siteURL"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagCount"
            },
            {
              "name": "tagNames"
            },
            {
              "name": "tags"
            },
            {
              "name": "useGutenbergEditorWithCustomPostType"
            },
            {
              "name": "useWhichPageBuilderWithCustomPostType"
            },
            {
              "name": "user"
            },
            {
              "name": "userCount"
            },
            {
              "name": "users"
            }
          ],
          "kind": "OBJECT",
          "description": "Query type, starting from which the query is executed"
        },
        {
          "name": "Root",
          "namespacedName": "Root",
          "fields": [
            {
              "name": "addCategoryMeta"
            },
            {
              "name": "addCategoryMetas"
            },
            {
              "name": "addCommentMeta"
            },
            {
              "name": "addCommentMetas"
            },
            {
              "name": "addCommentToCustomPost"
            },
            {
              "name": "addCommentToCustomPosts"
            },
            {
              "name": "addCustomPostMeta"
            },
            {
              "name": "addCustomPostMetas"
            },
            {
              "name": "addPostCategoryMeta"
            },
            {
              "name": "addPostCategoryMetas"
            },
            {
              "name": "addPostTagMeta"
            },
            {
              "name": "addPostTagMetas"
            },
            {
              "name": "addTagMeta"
            },
            {
              "name": "addTagMetas"
            },
            {
              "name": "addUserMeta"
            },
            {
              "name": "addUserMetas"
            },
            {
              "name": "capabilities"
            },
            {
              "name": "categories"
            },
            {
              "name": "category"
            },
            {
              "name": "categoryCount"
            },
            {
              "name": "categoryNames"
            },
            {
              "name": "comment"
            },
            {
              "name": "commentCount"
            },
            {
              "name": "comments"
            },
            {
              "name": "createCategories"
            },
            {
              "name": "createCategory"
            },
            {
              "name": "createCustomPost"
            },
            {
              "name": "createCustomPosts"
            },
            {
              "name": "createMediaItem"
            },
            {
              "name": "createMediaItems"
            },
            {
              "name": "createPage"
            },
            {
              "name": "createPages"
            },
            {
              "name": "createPost"
            },
            {
              "name": "createPostCategories"
            },
            {
              "name": "createPostCategory"
            },
            {
              "name": "createPostTag"
            },
            {
              "name": "createPostTags"
            },
            {
              "name": "createPosts"
            },
            {
              "name": "createTag"
            },
            {
              "name": "createTags"
            },
            {
              "name": "customPost"
            },
            {
              "name": "customPostCount"
            },
            {
              "name": "customPosts"
            },
            {
              "name": "deleteCategories"
            },
            {
              "name": "deleteCategory"
            },
            {
              "name": "deleteCategoryMeta"
            },
            {
              "name": "deleteCategoryMetas"
            },
            {
              "name": "deleteCommentMeta"
            },
            {
              "name": "deleteCommentMetas"
            },
            {
              "name": "deleteCustomPostMeta"
            },
            {
              "name": "deleteCustomPostMetas"
            },
            {
              "name": "deletePostCategories"
            },
            {
              "name": "deletePostCategory"
            },
            {
              "name": "deletePostCategoryMeta"
            },
            {
              "name": "deletePostCategoryMetas"
            },
            {
              "name": "deletePostTag"
            },
            {
              "name": "deletePostTagMeta"
            },
            {
              "name": "deletePostTagMetas"
            },
            {
              "name": "deletePostTags"
            },
            {
              "name": "deleteTag"
            },
            {
              "name": "deleteTagMeta"
            },
            {
              "name": "deleteTagMetas"
            },
            {
              "name": "deleteTags"
            },
            {
              "name": "deleteUserMeta"
            },
            {
              "name": "deleteUserMetas"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "imageSizeNames"
            },
            {
              "name": "isGutenbergEditorEnabled"
            },
            {
              "name": "isUserLoggedIn"
            },
            {
              "name": "loggedInUserID"
            },
            {
              "name": "loginUser"
            },
            {
              "name": "logoutUser"
            },
            {
              "name": "me"
            },
            {
              "name": "mediaItem"
            },
            {
              "name": "mediaItemCount"
            },
            {
              "name": "mediaItems"
            },
            {
              "name": "menu"
            },
            {
              "name": "menuCount"
            },
            {
              "name": "menus"
            },
            {
              "name": "myComment"
            },
            {
              "name": "myCommentCount"
            },
            {
              "name": "myComments"
            },
            {
              "name": "myCustomPost"
            },
            {
              "name": "myCustomPostCount"
            },
            {
              "name": "myCustomPosts"
            },
            {
              "name": "myMediaItem"
            },
            {
              "name": "myMediaItemCount"
            },
            {
              "name": "myMediaItems"
            },
            {
              "name": "myPage"
            },
            {
              "name": "myPageCount"
            },
            {
              "name": "myPages"
            },
            {
              "name": "myPost"
            },
            {
              "name": "myPostCount"
            },
            {
              "name": "myPosts"
            },
            {
              "name": "optionObjectValue"
            },
            {
              "name": "optionValue"
            },
            {
              "name": "optionValues"
            },
            {
              "name": "page"
            },
            {
              "name": "pageBuilders"
            },
            {
              "name": "pageCount"
            },
            {
              "name": "pages"
            },
            {
              "name": "post"
            },
            {
              "name": "postCategories"
            },
            {
              "name": "postCategory"
            },
            {
              "name": "postCategoryCount"
            },
            {
              "name": "postCategoryNames"
            },
            {
              "name": "postCount"
            },
            {
              "name": "postTag"
            },
            {
              "name": "postTagCount"
            },
            {
              "name": "postTagNames"
            },
            {
              "name": "postTags"
            },
            {
              "name": "posts"
            },
            {
              "name": "removeFeaturedImageFromCustomPost"
            },
            {
              "name": "removeFeaturedImageFromCustomPosts"
            },
            {
              "name": "replyComment"
            },
            {
              "name": "replyComments"
            },
            {
              "name": "roleNames"
            },
            {
              "name": "roles"
            },
            {
              "name": "self"
            },
            {
              "name": "setCategoriesOnCustomPost"
            },
            {
              "name": "setCategoriesOnCustomPosts"
            },
            {
              "name": "setCategoriesOnPost"
            },
            {
              "name": "setCategoriesOnPosts"
            },
            {
              "name": "setCategoryMeta"
            },
            {
              "name": "setCategoryMetas"
            },
            {
              "name": "setCommentMeta"
            },
            {
              "name": "setCommentMetas"
            },
            {
              "name": "setCustomPostMeta"
            },
            {
              "name": "setCustomPostMetas"
            },
            {
              "name": "setFeaturedImageOnCustomPost"
            },
            {
              "name": "setFeaturedImageOnCustomPosts"
            },
            {
              "name": "setPostCategoryMeta"
            },
            {
              "name": "setPostCategoryMetas"
            },
            {
              "name": "setPostTagMeta"
            },
            {
              "name": "setPostTagMetas"
            },
            {
              "name": "setTagMeta"
            },
            {
              "name": "setTagMetas"
            },
            {
              "name": "setTagsOnCustomPost"
            },
            {
              "name": "setTagsOnCustomPosts"
            },
            {
              "name": "setTagsOnPost"
            },
            {
              "name": "setTagsOnPosts"
            },
            {
              "name": "setUserMeta"
            },
            {
              "name": "setUserMetas"
            },
            {
              "name": "siteLanguage"
            },
            {
              "name": "siteLocale"
            },
            {
              "name": "siteURL"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagCount"
            },
            {
              "name": "tagNames"
            },
            {
              "name": "tags"
            },
            {
              "name": "updateCategories"
            },
            {
              "name": "updateCategory"
            },
            {
              "name": "updateCategoryMeta"
            },
            {
              "name": "updateCategoryMetas"
            },
            {
              "name": "updateCommentMeta"
            },
            {
              "name": "updateCommentMetas"
            },
            {
              "name": "updateCustomPost"
            },
            {
              "name": "updateCustomPostMeta"
            },
            {
              "name": "updateCustomPostMetas"
            },
            {
              "name": "updateCustomPosts"
            },
            {
              "name": "updateMediaItem"
            },
            {
              "name": "updateMediaItems"
            },
            {
              "name": "updatePage"
            },
            {
              "name": "updatePages"
            },
            {
              "name": "updatePost"
            },
            {
              "name": "updatePostCategories"
            },
            {
              "name": "updatePostCategory"
            },
            {
              "name": "updatePostCategoryMeta"
            },
            {
              "name": "updatePostCategoryMetas"
            },
            {
              "name": "updatePostTag"
            },
            {
              "name": "updatePostTagMeta"
            },
            {
              "name": "updatePostTagMetas"
            },
            {
              "name": "updatePostTags"
            },
            {
              "name": "updatePosts"
            },
            {
              "name": "updateTag"
            },
            {
              "name": "updateTagMeta"
            },
            {
              "name": "updateTagMetas"
            },
            {
              "name": "updateTags"
            },
            {
              "name": "updateUserMeta"
            },
            {
              "name": "updateUserMetas"
            },
            {
              "name": "useGutenbergEditorWithCustomPostType"
            },
            {
              "name": "useWhichPageBuilderWithCustomPostType"
            },
            {
              "name": "user"
            },
            {
              "name": "userCount"
            },
            {
              "name": "users"
            }
          ],
          "kind": "OBJECT",
          "description": "Root type, starting from which the query is executed"
        },
        {
          "name": "RootAddCommentMetaMutationPayload",
          "namespacedName": "RootAddCommentMetaMutationPayload",
          "fields": [
            {
              "name": "comment"
            },
            {
              "name": "commentID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding meta to a comment"
        },
        {
          "name": "RootAddCommentToCustomPostMutationPayload",
          "namespacedName": "RootAddCommentToCustomPostMutationPayload",
          "fields": [
            {
              "name": "comment"
            },
            {
              "name": "commentID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding a comment to a custom post"
        },
        {
          "name": "RootAddGenericCategoryTermMetaMutationPayload",
          "namespacedName": "RootAddGenericCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding meta to a category term"
        },
        {
          "name": "RootAddGenericCustomPostMetaMutationPayload",
          "namespacedName": "RootAddGenericCustomPostMetaMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding meta to a custom post"
        },
        {
          "name": "RootAddGenericTagTermMetaMutationPayload",
          "namespacedName": "RootAddGenericTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding meta to a tag term"
        },
        {
          "name": "RootAddPostCategoryTermMetaMutationPayload",
          "namespacedName": "RootAddPostCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding meta to a posts's category term"
        },
        {
          "name": "RootAddPostTagTermMetaMutationPayload",
          "namespacedName": "RootAddPostTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding meta to a posts's tag term"
        },
        {
          "name": "RootAddUserMetaMutationPayload",
          "namespacedName": "RootAddUserMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "user"
            },
            {
              "name": "userID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of adding meta to a user"
        },
        {
          "name": "RootCreateCustomPostMutationPayload",
          "namespacedName": "RootCreateCustomPostMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of creating a custom post"
        },
        {
          "name": "RootCreateGenericCategoryTermMutationPayload",
          "namespacedName": "RootCreateGenericCategoryTermMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of creating a category term"
        },
        {
          "name": "RootCreateGenericTagTermMutationPayload",
          "namespacedName": "RootCreateGenericTagTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of creating a tag term"
        },
        {
          "name": "RootCreateMediaItemMutationPayload",
          "namespacedName": "RootCreateMediaItemMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "mediaItem"
            },
            {
              "name": "mediaItemID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of uploading an attachment"
        },
        {
          "name": "RootCreatePageMutationPayload",
          "namespacedName": "RootCreatePageMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "page"
            },
            {
              "name": "pageID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of creating a page"
        },
        {
          "name": "RootCreatePostCategoryTermMutationPayload",
          "namespacedName": "RootCreatePostCategoryTermMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of creating a post category term"
        },
        {
          "name": "RootCreatePostMutationPayload",
          "namespacedName": "RootCreatePostMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "post"
            },
            {
              "name": "postID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of creating a post"
        },
        {
          "name": "RootCreatePostTagTermMutationPayload",
          "namespacedName": "RootCreatePostTagTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of creating a post tag term"
        },
        {
          "name": "RootDeleteCommentMetaMutationPayload",
          "namespacedName": "RootDeleteCommentMetaMutationPayload",
          "fields": [
            {
              "name": "comment"
            },
            {
              "name": "commentID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete meta mutation on a comment"
        },
        {
          "name": "RootDeleteGenericCategoryTermMetaMutationPayload",
          "namespacedName": "RootDeleteGenericCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete meta mutation on a category term"
        },
        {
          "name": "RootDeleteGenericCategoryTermMutationPayload",
          "namespacedName": "RootDeleteGenericCategoryTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete mutation on a category term"
        },
        {
          "name": "RootDeleteGenericCustomPostMetaMutationPayload",
          "namespacedName": "RootDeleteGenericCustomPostMetaMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete meta mutation on a custom post"
        },
        {
          "name": "RootDeleteGenericTagTermMetaMutationPayload",
          "namespacedName": "RootDeleteGenericTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete meta mutation on a tag term"
        },
        {
          "name": "RootDeleteGenericTagTermMutationPayload",
          "namespacedName": "RootDeleteGenericTagTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete mutation on a tag term"
        },
        {
          "name": "RootDeletePostCategoryTermMetaMutationPayload",
          "namespacedName": "RootDeletePostCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete meta mutation on a post's category term"
        },
        {
          "name": "RootDeletePostCategoryTermMutationPayload",
          "namespacedName": "RootDeletePostCategoryTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete mutation on a post category term"
        },
        {
          "name": "RootDeletePostTagTermMetaMutationPayload",
          "namespacedName": "RootDeletePostTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete meta mutation on a post's tag term"
        },
        {
          "name": "RootDeletePostTagTermMutationPayload",
          "namespacedName": "RootDeletePostTagTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete mutation on a post tag term"
        },
        {
          "name": "RootDeleteUserMetaMutationPayload",
          "namespacedName": "RootDeleteUserMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "user"
            },
            {
              "name": "userID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a delete meta mutation on a user"
        },
        {
          "name": "RootLoginUserMutationPayload",
          "namespacedName": "RootLoginUserMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "user"
            },
            {
              "name": "userID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of logging the user in"
        },
        {
          "name": "RootLogoutUserMutationPayload",
          "namespacedName": "RootLogoutUserMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "user"
            },
            {
              "name": "userID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of logging the user out"
        },
        {
          "name": "RootRemoveFeaturedImageFromCustomPostMutationPayload",
          "namespacedName": "RootRemoveFeaturedImageFromCustomPostMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of removing the featured image from a custom post"
        },
        {
          "name": "RootReplyCommentMutationPayload",
          "namespacedName": "RootReplyCommentMutationPayload",
          "fields": [
            {
              "name": "comment"
            },
            {
              "name": "commentID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of replying to a comment"
        },
        {
          "name": "RootSetCategoriesOnCustomPostMutationPayload",
          "namespacedName": "RootSetCategoriesOnCustomPostMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of setting categories on a custom post"
        },
        {
          "name": "RootSetCategoriesOnPostMutationPayload",
          "namespacedName": "RootSetCategoriesOnPostMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "post"
            },
            {
              "name": "postID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of setting categories on a post"
        },
        {
          "name": "RootSetCommentMetaMutationPayload",
          "namespacedName": "RootSetCommentMetaMutationPayload",
          "fields": [
            {
              "name": "comment"
            },
            {
              "name": "commentID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a set meta mutation on a comment"
        },
        {
          "name": "RootSetFeaturedImageOnCustomPostMutationPayload",
          "namespacedName": "RootSetFeaturedImageOnCustomPostMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of setting the featured image to a custom post"
        },
        {
          "name": "RootSetGenericCategoryTermMetaMutationPayload",
          "namespacedName": "RootSetGenericCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a set meta mutation on a category term"
        },
        {
          "name": "RootSetGenericCustomPostMetaMutationPayload",
          "namespacedName": "RootSetGenericCustomPostMetaMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a set meta mutation on a custom post"
        },
        {
          "name": "RootSetGenericTagTermMetaMutationPayload",
          "namespacedName": "RootSetGenericTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a set meta mutation on a tag term"
        },
        {
          "name": "RootSetPostCategoryTermMetaMutationPayload",
          "namespacedName": "RootSetPostCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a set meta mutation on a post's category term"
        },
        {
          "name": "RootSetPostTagTermMetaMutationPayload",
          "namespacedName": "RootSetPostTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a set meta mutation on a post's tag term"
        },
        {
          "name": "RootSetTagsOnCustomPostMutationPayload",
          "namespacedName": "RootSetTagsOnCustomPostMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of setting tags on a custom post"
        },
        {
          "name": "RootSetTagsOnPostMutationPayload",
          "namespacedName": "RootSetTagsOnPostMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "post"
            },
            {
              "name": "postID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of setting tags on a post"
        },
        {
          "name": "RootSetUserMetaMutationPayload",
          "namespacedName": "RootSetUserMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "user"
            },
            {
              "name": "userID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing a set meta mutation on a user"
        },
        {
          "name": "RootUpdateCommentMetaMutationPayload",
          "namespacedName": "RootUpdateCommentMetaMutationPayload",
          "fields": [
            {
              "name": "comment"
            },
            {
              "name": "commentID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update meta mutation on a comment"
        },
        {
          "name": "RootUpdateCustomPostMutationPayload",
          "namespacedName": "RootUpdateCustomPostMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update mutation on a custom post"
        },
        {
          "name": "RootUpdateGenericCategoryTermMetaMutationPayload",
          "namespacedName": "RootUpdateGenericCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update meta mutation on a category term"
        },
        {
          "name": "RootUpdateGenericCategoryTermMutationPayload",
          "namespacedName": "RootUpdateGenericCategoryTermMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update mutation on a category term"
        },
        {
          "name": "RootUpdateGenericCustomPostMetaMutationPayload",
          "namespacedName": "RootUpdateGenericCustomPostMetaMutationPayload",
          "fields": [
            {
              "name": "customPost"
            },
            {
              "name": "customPostID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update meta mutation on a custom post"
        },
        {
          "name": "RootUpdateGenericTagTermMetaMutationPayload",
          "namespacedName": "RootUpdateGenericTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update meta mutation on a tag term"
        },
        {
          "name": "RootUpdateGenericTagTermMutationPayload",
          "namespacedName": "RootUpdateGenericTagTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update mutation on a tag term"
        },
        {
          "name": "RootUpdateMediaItemMutationPayload",
          "namespacedName": "RootUpdateMediaItemMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "mediaItem"
            },
            {
              "name": "mediaItemID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of updating the metadata for an attachment"
        },
        {
          "name": "RootUpdatePageMutationPayload",
          "namespacedName": "RootUpdatePageMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "page"
            },
            {
              "name": "pageID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update mutation on a page"
        },
        {
          "name": "RootUpdatePostCategoryTermMetaMutationPayload",
          "namespacedName": "RootUpdatePostCategoryTermMetaMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update meta mutation on a post's category term"
        },
        {
          "name": "RootUpdatePostCategoryTermMutationPayload",
          "namespacedName": "RootUpdatePostCategoryTermMutationPayload",
          "fields": [
            {
              "name": "category"
            },
            {
              "name": "categoryID"
            },
            {
              "name": "errors"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update mutation on a post category term"
        },
        {
          "name": "RootUpdatePostMutationPayload",
          "namespacedName": "RootUpdatePostMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "post"
            },
            {
              "name": "postID"
            },
            {
              "name": "status"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update mutation on a post"
        },
        {
          "name": "RootUpdatePostTagTermMetaMutationPayload",
          "namespacedName": "RootUpdatePostTagTermMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update meta mutation on a post's tag term"
        },
        {
          "name": "RootUpdatePostTagTermMutationPayload",
          "namespacedName": "RootUpdatePostTagTermMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "tag"
            },
            {
              "name": "tagID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update mutation on a post tag term"
        },
        {
          "name": "RootUpdateUserMetaMutationPayload",
          "namespacedName": "RootUpdateUserMetaMutationPayload",
          "fields": [
            {
              "name": "errors"
            },
            {
              "name": "status"
            },
            {
              "name": "user"
            },
            {
              "name": "userID"
            }
          ],
          "kind": "OBJECT",
          "description": "Payload of executing an update meta mutation on a user"
        },
        {
          "name": "TagTermDoesNotExistErrorPayload",
          "namespacedName": "TagTermDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The requested tag does not exist\""
        },
        {
          "name": "TaxonomyIsNotValidErrorPayload",
          "namespacedName": "TaxonomyIsNotValidErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The requested taxonomy does not exist\""
        },
        {
          "name": "User",
          "namespacedName": "User",
          "fields": [
            {
              "name": "avatar"
            },
            {
              "name": "capabilities"
            },
            {
              "name": "customPostCount"
            },
            {
              "name": "customPosts"
            },
            {
              "name": "description"
            },
            {
              "name": "displayName"
            },
            {
              "name": "email"
            },
            {
              "name": "firstName"
            },
            {
              "name": "globalID"
            },
            {
              "name": "hasAnyCapability"
            },
            {
              "name": "hasAnyRole"
            },
            {
              "name": "hasCapability"
            },
            {
              "name": "hasRole"
            },
            {
              "name": "id"
            },
            {
              "name": "lastName"
            },
            {
              "name": "locale"
            },
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            },
            {
              "name": "name"
            },
            {
              "name": "nicename"
            },
            {
              "name": "nickname"
            },
            {
              "name": "postCount"
            },
            {
              "name": "posts"
            },
            {
              "name": "registeredDate"
            },
            {
              "name": "registeredDateStr"
            },
            {
              "name": "roleNames"
            },
            {
              "name": "roles"
            },
            {
              "name": "self"
            },
            {
              "name": "slug"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            },
            {
              "name": "username"
            },
            {
              "name": "websiteURL"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a user"
        },
        {
          "name": "UserAvatar",
          "namespacedName": "UserAvatar",
          "fields": [
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "self"
            },
            {
              "name": "size"
            },
            {
              "name": "src"
            }
          ],
          "kind": "OBJECT",
          "description": "User avatar"
        },
        {
          "name": "UserDoesNotExistErrorPayload",
          "namespacedName": "UserDoesNotExistErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The user does not exist\""
        },
        {
          "name": "UserHasNoPermissionToUploadFilesErrorPayload",
          "namespacedName": "UserHasNoPermissionToUploadFilesErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The user has no permission to upload files\""
        },
        {
          "name": "UserHasNoPermissionToUploadFilesForOtherUsersErrorPayload",
          "namespacedName": "UserHasNoPermissionToUploadFilesForOtherUsersErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The user has no permission to upload files for other users\""
        },
        {
          "name": "UserIsLoggedInErrorPayload",
          "namespacedName": "UserIsLoggedInErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The user is already logged-in\""
        },
        {
          "name": "UserIsNotLoggedInErrorPayload",
          "namespacedName": "UserIsNotLoggedInErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "OBJECT",
          "description": "Error payload for: \"The user is not logged-in\""
        },
        {
          "name": "UserRole",
          "namespacedName": "UserRole",
          "fields": [
            {
              "name": "capabilities"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "self"
            }
          ],
          "kind": "OBJECT",
          "description": "User roles"
        },
        {
          "name": "_DirectiveExtensions",
          "namespacedName": "_DirectiveExtensions",
          "fields": [
            {
              "name": "fieldDirectiveSupportedTypeNamesOrDescriptions"
            },
            {
              "name": "needsDataToExecute"
            }
          ],
          "kind": "OBJECT",
          "description": "Extensions (custom metadata) added to the directive"
        },
        {
          "name": "_EnumValueExtensions",
          "namespacedName": "_EnumValueExtensions",
          "fields": [
            {
              "name": "isSensitiveDataElement"
            }
          ],
          "kind": "OBJECT",
          "description": "Extensions (custom metadata) added to the enum value"
        },
        {
          "name": "_FieldExtensions",
          "namespacedName": "_FieldExtensions",
          "fields": [
            {
              "name": "isGlobal"
            },
            {
              "name": "isMutation"
            },
            {
              "name": "isSensitiveDataElement"
            }
          ],
          "kind": "OBJECT",
          "description": "Extensions (custom metadata) added to the field"
        },
        {
          "name": "_InputValueExtensions",
          "namespacedName": "_InputValueExtensions",
          "fields": [
            {
              "name": "isSensitiveDataElement"
            }
          ],
          "kind": "OBJECT",
          "description": "Extensions (custom metadata) added to the input value"
        },
        {
          "name": "_NamedTypeExtensions",
          "namespacedName": "_NamedTypeExtensions",
          "fields": [
            {
              "name": "elementName"
            },
            {
              "name": "isOneOf"
            },
            {
              "name": "namespacedName"
            },
            {
              "name": "possibleValues"
            }
          ],
          "kind": "OBJECT",
          "description": "Extensions (custom metadata) added to the GraphQL type (for all 'named' types: Object, Interface, Union, Scalar, Enum and InputObject)"
        },
        {
          "name": "_SchemaExtensions",
          "namespacedName": "_SchemaExtensions",
          "fields": [
            {
              "name": "isNamespaced"
            }
          ],
          "kind": "OBJECT",
          "description": "Extensions (custom metadata) added to the GraphQL schema"
        },
        {
          "name": "__Directive",
          "namespacedName": "__Directive",
          "fields": [
            {
              "name": "args"
            },
            {
              "name": "description"
            },
            {
              "name": "extensions"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "isRepeatable"
            },
            {
              "name": "locations"
            },
            {
              "name": "name"
            }
          ],
          "kind": "OBJECT",
          "description": "A GraphQL directive in the data graph"
        },
        {
          "name": "__EnumValue",
          "namespacedName": "__EnumValue",
          "fields": [
            {
              "name": "deprecationReason"
            },
            {
              "name": "description"
            },
            {
              "name": "extensions"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "isDeprecated"
            },
            {
              "name": "name"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of an Enum value in GraphQL"
        },
        {
          "name": "__Field",
          "namespacedName": "__Field",
          "fields": [
            {
              "name": "args"
            },
            {
              "name": "deprecationReason"
            },
            {
              "name": "description"
            },
            {
              "name": "extensions"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "isDeprecated"
            },
            {
              "name": "name"
            },
            {
              "name": "type"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of a GraphQL type's field"
        },
        {
          "name": "__InputValue",
          "namespacedName": "__InputValue",
          "fields": [
            {
              "name": "defaultValue"
            },
            {
              "name": "description"
            },
            {
              "name": "extensions"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "name"
            },
            {
              "name": "type"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of an input object in GraphQL"
        },
        {
          "name": "__Schema",
          "namespacedName": "__Schema",
          "fields": [
            {
              "name": "directives"
            },
            {
              "name": "extensions"
            },
            {
              "name": "globalFields"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "mutationType"
            },
            {
              "name": "queryType"
            },
            {
              "name": "subscriptionType"
            },
            {
              "name": "type"
            },
            {
              "name": "types"
            }
          ],
          "kind": "OBJECT",
          "description": "Schema type, to implement the introspection fields"
        },
        {
          "name": "__Type",
          "namespacedName": "__Type",
          "fields": [
            {
              "name": "description"
            },
            {
              "name": "enumValues"
            },
            {
              "name": "extensions"
            },
            {
              "name": "fields"
            },
            {
              "name": "globalID"
            },
            {
              "name": "id"
            },
            {
              "name": "inputFields"
            },
            {
              "name": "interfaces"
            },
            {
              "name": "kind"
            },
            {
              "name": "name"
            },
            {
              "name": "ofType"
            },
            {
              "name": "possibleTypes"
            },
            {
              "name": "specifiedByURL"
            }
          ],
          "kind": "OBJECT",
          "description": "Representation of each GraphQL type in the graph"
        },
        {
          "name": "AnyBuiltInScalar",
          "namespacedName": "AnyBuiltInScalar",
          "fields": null,
          "kind": "SCALAR",
          "description": "Wildcard type representing any of GraphQL's built-in types (String, Int, Boolean, Float or ID)"
        },
        {
          "name": "AnyScalar",
          "namespacedName": "AnyScalar",
          "fields": null,
          "kind": "SCALAR",
          "description": "Wildcard type representing any of GraphQL's scalar types, including built-in types (String, Int, Boolean, Float or ID) and custom types"
        },
        {
          "name": "Boolean",
          "namespacedName": "Boolean",
          "fields": null,
          "kind": "SCALAR",
          "description": "The Boolean scalar type represents `true` or `false`."
        },
        {
          "name": "CategoryTaxonomyEnumString",
          "namespacedName": "CategoryTaxonomyEnumString",
          "fields": null,
          "kind": "SCALAR",
          "description": "Category taxonomies (available for querying via the API), with possible values: `\"additional-dummy-category\"`, `\"additional-post-category\"`, `\"category\"`, `\"dummy-category\"`, `\"dummy-category-two\"`."
        },
        {
          "name": "CustomPostEnumString",
          "namespacedName": "CustomPostEnumString",
          "fields": null,
          "kind": "SCALAR",
          "description": "Custom post types (available for querying via the API), with possible values: `\"dummy-cpt\"`, `\"dummy-cpt-two\"`, `\"page\"`, `\"post\"`."
        },
        {
          "name": "Date",
          "namespacedName": "Date",
          "fields": null,
          "kind": "SCALAR",
          "description": "Date scalar. It follows the ISO 8601 specification, with format \"Y-m-d\")"
        },
        {
          "name": "DateTime",
          "namespacedName": "DateTime",
          "fields": null,
          "kind": "SCALAR",
          "description": "DateTime scalar. It follows the ISO 8601 specification, with format \"Y-m-d\\TH:i:sP\")"
        },
        {
          "name": "Email",
          "namespacedName": "Email",
          "fields": null,
          "kind": "SCALAR",
          "description": "Email scalar, such as leo@mysite.com"
        },
        {
          "name": "HTML",
          "namespacedName": "HTML",
          "fields": null,
          "kind": "SCALAR",
          "description": "HTML scalar, such as \"<p>Hello <strong>world<\/strong>!<\/p>\""
        },
        {
          "name": "ID",
          "namespacedName": "ID",
          "fields": null,
          "kind": "SCALAR",
          "description": "The ID scalar type represents a unique identifier."
        },
        {
          "name": "Int",
          "namespacedName": "Int",
          "fields": null,
          "kind": "SCALAR",
          "description": "The Int scalar type represents non-fractional signed whole numeric values."
        },
        {
          "name": "JSONObject",
          "namespacedName": "JSONObject",
          "fields": null,
          "kind": "SCALAR",
          "description": "Custom scalar representing a JSON Object of unrestricted shape"
        },
        {
          "name": "ListValueJSONObject",
          "namespacedName": "ListValueJSONObject",
          "fields": null,
          "kind": "SCALAR",
          "description": "Custom scalar representing a JSON Object where values are lists (of anything)"
        },
        {
          "name": "MenuLocationEnumString",
          "namespacedName": "MenuLocationEnumString",
          "fields": null,
          "kind": "SCALAR",
          "description": "Menu Locations, with possible values: `\"footer\"`, `\"primary\"`."
        },
        {
          "name": "NullableListValueJSONObject",
          "namespacedName": "NullableListValueJSONObject",
          "fields": null,
          "kind": "SCALAR",
          "description": "Custom scalar representing a JSON Object where values are lists (of anything) or null"
        },
        {
          "name": "Numeric",
          "namespacedName": "Numeric",
          "fields": null,
          "kind": "SCALAR",
          "description": "Wildcard type representing any of the numeric types (Int or Float)"
        },
        {
          "name": "PageBuilderProvidersEnumString",
          "namespacedName": "PageBuilderProvidersEnumString",
          "fields": null,
          "kind": "SCALAR",
          "description": "Possible values: `\"\"`."
        },
        {
          "name": "PostCategoryTaxonomyEnumString",
          "namespacedName": "PostCategoryTaxonomyEnumString",
          "fields": null,
          "kind": "SCALAR",
          "description": "Post category taxonomies (available for querying via the API), with possible values: `\"additional-post-category\"`, `\"category\"`."
        },
        {
          "name": "PostTagTaxonomyEnumString",
          "namespacedName": "PostTagTaxonomyEnumString",
          "fields": null,
          "kind": "SCALAR",
          "description": "Post tag taxonomies (available for querying via the API), with possible values: `\"additional-post-tag\"`, `\"post_tag\"`."
        },
        {
          "name": "String",
          "namespacedName": "String",
          "fields": null,
          "kind": "SCALAR",
          "description": "The String scalar type represents textual data, represented as UTF-8 character sequences."
        },
        {
          "name": "TagTaxonomyEnumString",
          "namespacedName": "TagTaxonomyEnumString",
          "fields": null,
          "kind": "SCALAR",
          "description": "Tag taxonomies (available for querying via the API), with possible values: `\"additional-dummy-tag\"`, `\"additional-post-tag\"`, `\"dummy-tag\"`, `\"dummy-tag-two\"`, `\"post_tag\"`."
        },
        {
          "name": "URL",
          "namespacedName": "URL",
          "fields": null,
          "kind": "SCALAR",
          "description": "URL scalar, such as https:\/\/mysite.com\/my-fabulous-page"
        },
        {
          "name": "URLAbsolutePath",
          "namespacedName": "URLAbsolutePath",
          "fields": null,
          "kind": "SCALAR",
          "description": "URL Absolute Path scalar, such as \"\/my-fabulous-page\" in URL \"https:\/\/mysite.com\/my-fabulous-page\". The absolute path starts with \"\/\", followed by the URL relative path"
        },
        {
          "name": "Block",
          "namespacedName": "Block",
          "fields": [
            {
              "name": "attributes"
            },
            {
              "name": "contentSource"
            },
            {
              "name": "innerBlocks"
            },
            {
              "name": "name"
            }
          ],
          "kind": "INTERFACE",
          "description": "Entities representing a Block"
        },
        {
          "name": "Category",
          "namespacedName": "Category",
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "description"
            },
            {
              "name": "name"
            }
          ],
          "kind": "INTERFACE",
          "description": "Entities representing a category"
        },
        {
          "name": "Commentable",
          "namespacedName": "Commentable",
          "fields": [
            {
              "name": "areCommentsOpen"
            },
            {
              "name": "commentCount"
            },
            {
              "name": "comments"
            },
            {
              "name": "hasComments"
            }
          ],
          "kind": "INTERFACE",
          "description": "The entity can receive comments"
        },
        {
          "name": "CustomPost",
          "namespacedName": "CustomPost",
          "fields": [
            {
              "name": "content"
            },
            {
              "name": "customPostType"
            },
            {
              "name": "date"
            },
            {
              "name": "dateStr"
            },
            {
              "name": "excerpt"
            },
            {
              "name": "isStatus"
            },
            {
              "name": "modifiedDate"
            },
            {
              "name": "modifiedDateStr"
            },
            {
              "name": "rawContent"
            },
            {
              "name": "rawExcerpt"
            },
            {
              "name": "rawTitle"
            },
            {
              "name": "slug"
            },
            {
              "name": "status"
            },
            {
              "name": "title"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            }
          ],
          "kind": "INTERFACE",
          "description": "Entities representing a custom post"
        },
        {
          "name": "ErrorPayload",
          "namespacedName": "ErrorPayload",
          "fields": [
            {
              "name": "message"
            }
          ],
          "kind": "INTERFACE",
          "description": "Entities representing an Error payload"
        },
        {
          "name": "IdentifiableObject",
          "namespacedName": "IdentifiableObject",
          "fields": [
            {
              "name": "globalID"
            },
            {
              "name": "id"
            }
          ],
          "kind": "INTERFACE",
          "description": "An object that can be uniquely identifiable within its type via an 'ID', and within the whole schema via a 'global ID'"
        },
        {
          "name": "Queryable",
          "namespacedName": "Queryable",
          "fields": [
            {
              "name": "slug"
            },
            {
              "name": "url"
            },
            {
              "name": "urlPath"
            }
          ],
          "kind": "INTERFACE",
          "description": "Entities that can be queried through an URL"
        },
        {
          "name": "Tag",
          "namespacedName": "Tag",
          "fields": [
            {
              "name": "count"
            },
            {
              "name": "description"
            },
            {
              "name": "name"
            }
          ],
          "kind": "INTERFACE",
          "description": "Entities representing a tag"
        },
        {
          "name": "WithAuthor",
          "namespacedName": "WithAuthor",
          "fields": [
            {
              "name": "author"
            }
          ],
          "kind": "INTERFACE",
          "description": "Entities that have an author"
        },
        {
          "name": "WithFeaturedImage",
          "namespacedName": "WithFeaturedImage",
          "fields": [
            {
              "name": "featuredImage"
            },
            {
              "name": "hasFeaturedImage"
            }
          ],
          "kind": "INTERFACE",
          "description": "Fields concerning an entity's featured image"
        },
        {
          "name": "WithMeta",
          "namespacedName": "WithMeta",
          "fields": [
            {
              "name": "meta"
            },
            {
              "name": "metaKeys"
            },
            {
              "name": "metaValue"
            },
            {
              "name": "metaValues"
            }
          ],
          "kind": "INTERFACE",
          "description": "Fields with meta values"
        },
        {
          "name": "AuthorByInput",
          "namespacedName": "AuthorByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the custom post author"
        },
        {
          "name": "BlockFilterByInput",
          "namespacedName": "BlockFilterByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to filter blocks"
        },
        {
          "name": "CategoriesByInput",
          "namespacedName": "CategoriesByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "CategoryByFilterInput",
          "namespacedName": "CategoryByFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a category"
        },
        {
          "name": "CategoryByInput",
          "namespacedName": "CategoryByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "CategoryPaginationInput",
          "namespacedName": "CategoryPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate categories"
        },
        {
          "name": "CommentByInput",
          "namespacedName": "CommentByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a comment"
        },
        {
          "name": "CommentContentInput",
          "namespacedName": "CommentContentInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "CommentMetaQueryInput",
          "namespacedName": "CommentMetaQueryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Filter by meta key and value. The key must be allowed access in the Settings. See: https:\/\/developer.wordpress.org\/reference\/classes\/wp_meta_query\/"
        },
        {
          "name": "CommentResponsePaginationInput",
          "namespacedName": "CommentResponsePaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate response comments"
        },
        {
          "name": "CommentResponsesFilterInput",
          "namespacedName": "CommentResponsesFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter comment responses"
        },
        {
          "name": "CommentSortInput",
          "namespacedName": "CommentSortInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to sort custom posts"
        },
        {
          "name": "CreateMediaItemFromContentInput",
          "namespacedName": "CreateMediaItemFromContentInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Provide the data to create and upload the attachment"
        },
        {
          "name": "CreateMediaItemFromInput",
          "namespacedName": "CreateMediaItemFromInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "CreateMediaItemFromURLInput",
          "namespacedName": "CreateMediaItemFromURLInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Create and upload the attachment from a URL"
        },
        {
          "name": "CustomPostByInput",
          "namespacedName": "CustomPostByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a custom post"
        },
        {
          "name": "CustomPostCategoriesFilterInput",
          "namespacedName": "CustomPostCategoriesFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter categories from a custom post"
        },
        {
          "name": "CustomPostCommentPaginationInput",
          "namespacedName": "CustomPostCommentPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate custom post comments"
        },
        {
          "name": "CustomPostCommentsFilterInput",
          "namespacedName": "CustomPostCommentsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter comments from custom posts"
        },
        {
          "name": "CustomPostContentInput",
          "namespacedName": "CustomPostContentInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "CustomPostMetaQueryInput",
          "namespacedName": "CustomPostMetaQueryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Filter by meta key and value. The key must be allowed access in the Settings. See: https:\/\/developer.wordpress.org\/reference\/classes\/wp_meta_query\/"
        },
        {
          "name": "CustomPostPaginationInput",
          "namespacedName": "CustomPostPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate custom posts"
        },
        {
          "name": "CustomPostSortInput",
          "namespacedName": "CustomPostSortInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to sort custom posts"
        },
        {
          "name": "CustomPostTagsFilterInput",
          "namespacedName": "CustomPostTagsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter tags from a custom post"
        },
        {
          "name": "DateQueryInput",
          "namespacedName": "DateQueryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "FeaturedImageByInput",
          "namespacedName": "FeaturedImageByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the custom post's featured image"
        },
        {
          "name": "FilterByAuthorInput",
          "namespacedName": "FilterByAuthorInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Filter by author"
        },
        {
          "name": "FilterByTaxonomyTermsInput",
          "namespacedName": "FilterByTaxonomyTermsInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "FilterCommentsByCommentAuthorInput",
          "namespacedName": "FilterCommentsByCommentAuthorInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Filter comments by comment author"
        },
        {
          "name": "FilterCommentsByCustomPostAuthorInput",
          "namespacedName": "FilterCommentsByCustomPostAuthorInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Filter comments by custom post author"
        },
        {
          "name": "FilterCustomPostsByCategoriesInput",
          "namespacedName": "FilterCustomPostsByCategoriesInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter custom posts by categories"
        },
        {
          "name": "FilterCustomPostsByTagsInput",
          "namespacedName": "FilterCustomPostsByTagsInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter custom posts by tags"
        },
        {
          "name": "FilterPostsByCategoriesInput",
          "namespacedName": "FilterPostsByCategoriesInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter custom posts by categories"
        },
        {
          "name": "FilterPostsByTagsInput",
          "namespacedName": "FilterPostsByTagsInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter custom posts by tags"
        },
        {
          "name": "LoginCredentialsInput",
          "namespacedName": "LoginCredentialsInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "LoginUserByInput",
          "namespacedName": "LoginUserByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "MediaItemByInput",
          "namespacedName": "MediaItemByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a media item"
        },
        {
          "name": "MediaItemSortInput",
          "namespacedName": "MediaItemSortInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to sort custom posts"
        },
        {
          "name": "MenuByInput",
          "namespacedName": "MenuByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a menu"
        },
        {
          "name": "MenuSortInput",
          "namespacedName": "MenuSortInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to sort custom posts"
        },
        {
          "name": "MetaQueryCompareByArrayValueInput",
          "namespacedName": "MetaQueryCompareByArrayValueInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "MetaQueryCompareByInput",
          "namespacedName": "MetaQueryCompareByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "MetaQueryCompareByKeyInput",
          "namespacedName": "MetaQueryCompareByKeyInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "MetaQueryCompareByNumericValueInput",
          "namespacedName": "MetaQueryCompareByNumericValueInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "MetaQueryCompareByStringValueInput",
          "namespacedName": "MetaQueryCompareByStringValueInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "PageByInput",
          "namespacedName": "PageByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a page"
        },
        {
          "name": "PageChildrenFilterInput",
          "namespacedName": "PageChildrenFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter the page children"
        },
        {
          "name": "PageContentInput",
          "namespacedName": "PageContentInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "PagePaginationInput",
          "namespacedName": "PagePaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate pages"
        },
        {
          "name": "PostByInput",
          "namespacedName": "PostByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a post"
        },
        {
          "name": "PostCategoryByFilterInput",
          "namespacedName": "PostCategoryByFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a category"
        },
        {
          "name": "PostContentInput",
          "namespacedName": "PostContentInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "PostPaginationInput",
          "namespacedName": "PostPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate posts"
        },
        {
          "name": "PostTagByFilterInput",
          "namespacedName": "PostTagByFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a tag"
        },
        {
          "name": "RootAddCategoryMetaInput",
          "namespacedName": "RootAddCategoryMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to add meta to a category term"
        },
        {
          "name": "RootAddCommentMetaInput",
          "namespacedName": "RootAddCommentMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to add meta to a comment"
        },
        {
          "name": "RootAddCommentToCustomPostInput",
          "namespacedName": "RootAddCommentToCustomPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to add a comment to a custom post"
        },
        {
          "name": "RootAddCustomPostMetaInput",
          "namespacedName": "RootAddCustomPostMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to add meta to a custom post"
        },
        {
          "name": "RootAddTagMetaInput",
          "namespacedName": "RootAddTagMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to add meta to a tag term"
        },
        {
          "name": "RootAddUserMetaInput",
          "namespacedName": "RootAddUserMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to add meta to a user"
        },
        {
          "name": "RootCategoriesFilterInput",
          "namespacedName": "RootCategoriesFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter categories"
        },
        {
          "name": "RootCommentPaginationInput",
          "namespacedName": "RootCommentPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate comments"
        },
        {
          "name": "RootCommentsFilterInput",
          "namespacedName": "RootCommentsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter comments"
        },
        {
          "name": "RootCreateCustomPostInput",
          "namespacedName": "RootCreateCustomPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a custom post"
        },
        {
          "name": "RootCreateGenericCategoryInput",
          "namespacedName": "RootCreateGenericCategoryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to create a category term"
        },
        {
          "name": "RootCreateGenericTagInput",
          "namespacedName": "RootCreateGenericTagInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to create a tag term"
        },
        {
          "name": "RootCreateMediaItemInput",
          "namespacedName": "RootCreateMediaItemInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to upload an attachment"
        },
        {
          "name": "RootCreatePageInput",
          "namespacedName": "RootCreatePageInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a custom post"
        },
        {
          "name": "RootCreatePostCategoryInput",
          "namespacedName": "RootCreatePostCategoryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to create a category term"
        },
        {
          "name": "RootCreatePostInput",
          "namespacedName": "RootCreatePostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a custom post"
        },
        {
          "name": "RootCreatePostTagInput",
          "namespacedName": "RootCreatePostTagInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to create a tag term"
        },
        {
          "name": "RootCustomPostsFilterInput",
          "namespacedName": "RootCustomPostsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter custom posts"
        },
        {
          "name": "RootDeleteCategoryMetaInput",
          "namespacedName": "RootDeleteCategoryMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a category term's meta entry"
        },
        {
          "name": "RootDeleteCommentMetaInput",
          "namespacedName": "RootDeleteCommentMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a comment's meta entry"
        },
        {
          "name": "RootDeleteCustomPostMetaInput",
          "namespacedName": "RootDeleteCustomPostMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a custom post's meta entry"
        },
        {
          "name": "RootDeleteGenericCategoryInput",
          "namespacedName": "RootDeleteGenericCategoryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a category term"
        },
        {
          "name": "RootDeleteGenericTagInput",
          "namespacedName": "RootDeleteGenericTagInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a tag term"
        },
        {
          "name": "RootDeletePostCategoryInput",
          "namespacedName": "RootDeletePostCategoryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a category term"
        },
        {
          "name": "RootDeletePostTagInput",
          "namespacedName": "RootDeletePostTagInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a tag term"
        },
        {
          "name": "RootDeleteTagMetaInput",
          "namespacedName": "RootDeleteTagMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a tag term's meta entry"
        },
        {
          "name": "RootDeleteUserMetaInput",
          "namespacedName": "RootDeleteUserMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to delete a user's meta entry"
        },
        {
          "name": "RootMediaItemPaginationInput",
          "namespacedName": "RootMediaItemPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate media items"
        },
        {
          "name": "RootMediaItemsFilterInput",
          "namespacedName": "RootMediaItemsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter media items"
        },
        {
          "name": "RootMenuPaginationInput",
          "namespacedName": "RootMenuPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate menus"
        },
        {
          "name": "RootMenusFilterInput",
          "namespacedName": "RootMenusFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter menus"
        },
        {
          "name": "RootMyCommentsFilterInput",
          "namespacedName": "RootMyCommentsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter the logged-in user's comments"
        },
        {
          "name": "RootMyCustomPostsFilterInput",
          "namespacedName": "RootMyCustomPostsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter the logged-in user's custom posts"
        },
        {
          "name": "RootMyMediaItemsFilterInput",
          "namespacedName": "RootMyMediaItemsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter the logged-in user's media items"
        },
        {
          "name": "RootMyPagesFilterInput",
          "namespacedName": "RootMyPagesFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter the logged-in user's pages"
        },
        {
          "name": "RootMyPostsFilterInput",
          "namespacedName": "RootMyPostsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter the logged-in user's posts"
        },
        {
          "name": "RootPagesFilterInput",
          "namespacedName": "RootPagesFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter pages"
        },
        {
          "name": "RootPostCategoriesFilterInput",
          "namespacedName": "RootPostCategoriesFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter categories"
        },
        {
          "name": "RootPostTagsFilterInput",
          "namespacedName": "RootPostTagsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter tags"
        },
        {
          "name": "RootPostsFilterInput",
          "namespacedName": "RootPostsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter posts"
        },
        {
          "name": "RootRemoveFeaturedImageFromCustomPostInput",
          "namespacedName": "RootRemoveFeaturedImageFromCustomPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to remove the featured image from a custom post"
        },
        {
          "name": "RootReplyCommentInput",
          "namespacedName": "RootReplyCommentInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to add a comment to a custom post"
        },
        {
          "name": "RootSetCategoriesOnCustomPostInput",
          "namespacedName": "RootSetCategoriesOnCustomPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set categories on a custom post"
        },
        {
          "name": "RootSetCategoriesOnPostInput",
          "namespacedName": "RootSetCategoriesOnPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set categories on a custom post"
        },
        {
          "name": "RootSetCategoryMetaInput",
          "namespacedName": "RootSetCategoryMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set a category term's meta entries"
        },
        {
          "name": "RootSetCommentMetaInput",
          "namespacedName": "RootSetCommentMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set entries on a comment"
        },
        {
          "name": "RootSetCustomPostMetaInput",
          "namespacedName": "RootSetCustomPostMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set entries on a custom post"
        },
        {
          "name": "RootSetFeaturedImageOnCustomPostInput",
          "namespacedName": "RootSetFeaturedImageOnCustomPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set the featured image on a custom post"
        },
        {
          "name": "RootSetTagMetaInput",
          "namespacedName": "RootSetTagMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set a tag term's meta entries"
        },
        {
          "name": "RootSetTagsOnCustomPostInput",
          "namespacedName": "RootSetTagsOnCustomPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set tags on a custom post"
        },
        {
          "name": "RootSetTagsOnPostInput",
          "namespacedName": "RootSetTagsOnPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set tags on a custom post"
        },
        {
          "name": "RootSetUserMetaInput",
          "namespacedName": "RootSetUserMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to set entries on a user"
        },
        {
          "name": "RootTagsFilterInput",
          "namespacedName": "RootTagsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter tags"
        },
        {
          "name": "RootUpdateCategoryMetaInput",
          "namespacedName": "RootUpdateCategoryMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a category term's meta"
        },
        {
          "name": "RootUpdateCommentMetaInput",
          "namespacedName": "RootUpdateCommentMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a comment's meta"
        },
        {
          "name": "RootUpdateCustomPostInput",
          "namespacedName": "RootUpdateCustomPostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a custom post"
        },
        {
          "name": "RootUpdateCustomPostMetaInput",
          "namespacedName": "RootUpdateCustomPostMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a custom post's meta"
        },
        {
          "name": "RootUpdateGenericCategoryInput",
          "namespacedName": "RootUpdateGenericCategoryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a category term"
        },
        {
          "name": "RootUpdateGenericTagInput",
          "namespacedName": "RootUpdateGenericTagInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a tag term"
        },
        {
          "name": "RootUpdateMediaItemInput",
          "namespacedName": "RootUpdateMediaItemInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update the metadata for an attachment"
        },
        {
          "name": "RootUpdatePageInput",
          "namespacedName": "RootUpdatePageInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a custom post"
        },
        {
          "name": "RootUpdatePostCategoryInput",
          "namespacedName": "RootUpdatePostCategoryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a category term"
        },
        {
          "name": "RootUpdatePostInput",
          "namespacedName": "RootUpdatePostInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a custom post"
        },
        {
          "name": "RootUpdatePostTagInput",
          "namespacedName": "RootUpdatePostTagInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a tag term"
        },
        {
          "name": "RootUpdateTagMetaInput",
          "namespacedName": "RootUpdateTagMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a tag term's meta"
        },
        {
          "name": "RootUpdateUserMetaInput",
          "namespacedName": "RootUpdateUserMetaInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to update a user's meta"
        },
        {
          "name": "TagByFilterInput",
          "namespacedName": "TagByFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a tag"
        },
        {
          "name": "TagByInput",
          "namespacedName": "TagByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "TagPaginationInput",
          "namespacedName": "TagPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate tags"
        },
        {
          "name": "TagsByInput",
          "namespacedName": "TagsByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": null
        },
        {
          "name": "TaxonomyCustomPostsFilterInput",
          "namespacedName": "TaxonomyCustomPostsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter a taxonomy's custom posts"
        },
        {
          "name": "TaxonomyMetaQueryInput",
          "namespacedName": "TaxonomyMetaQueryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Filter by meta key and value. The key must be allowed access in the Settings. See: https:\/\/developer.wordpress.org\/reference\/classes\/wp_meta_query\/"
        },
        {
          "name": "TaxonomySortInput",
          "namespacedName": "TaxonomySortInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to sort custom posts"
        },
        {
          "name": "TaxonomyTaxonomiesFilterInput",
          "namespacedName": "TaxonomyTaxonomiesFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter child taxonomies"
        },
        {
          "name": "UserByInput",
          "namespacedName": "UserByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to fetch a user"
        },
        {
          "name": "UserCustomPostsFilterInput",
          "namespacedName": "UserCustomPostsFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter the user's custom posts"
        },
        {
          "name": "UserMetaQueryInput",
          "namespacedName": "UserMetaQueryInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Filter by meta key and value. The key must be allowed access in the Settings. See: https:\/\/developer.wordpress.org\/reference\/classes\/wp_meta_query\/"
        },
        {
          "name": "UserPaginationInput",
          "namespacedName": "UserPaginationInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to paginate users"
        },
        {
          "name": "UserSearchByInput",
          "namespacedName": "UserSearchByInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Oneof input to specify the property and data to search users"
        },
        {
          "name": "UserSortInput",
          "namespacedName": "UserSortInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to sort custom posts"
        },
        {
          "name": "UsersFilterInput",
          "namespacedName": "UsersFilterInput",
          "fields": null,
          "kind": "INPUT_OBJECT",
          "description": "Input to filter users"
        },
        {
          "name": "CommentOrderByEnum",
          "namespacedName": "CommentOrderByEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "CommentStatusEnum",
          "namespacedName": "CommentStatusEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "CommentTypeEnum",
          "namespacedName": "CommentTypeEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "CustomPostOrderByEnum",
          "namespacedName": "CustomPostOrderByEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "CustomPostStatusEnum",
          "namespacedName": "CustomPostStatusEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "DirectiveKindEnum",
          "namespacedName": "DirectiveKindEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "DirectiveLocation",
          "namespacedName": "DirectiveLocation",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "FilterCustomPostStatusEnum",
          "namespacedName": "FilterCustomPostStatusEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "MediaItemOrderByEnum",
          "namespacedName": "MediaItemOrderByEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "MenuOrderByEnum",
          "namespacedName": "MenuOrderByEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "MetaQueryCompareByArrayValueOperatorEnum",
          "namespacedName": "MetaQueryCompareByArrayValueOperatorEnum",
          "fields": null,
          "kind": "ENUM",
          "description": "Operators to compare against an array value"
        },
        {
          "name": "MetaQueryCompareByKeyOperatorEnum",
          "namespacedName": "MetaQueryCompareByKeyOperatorEnum",
          "fields": null,
          "kind": "ENUM",
          "description": "Operators to compare against the meta key"
        },
        {
          "name": "MetaQueryCompareByNumericValueOperatorEnum",
          "namespacedName": "MetaQueryCompareByNumericValueOperatorEnum",
          "fields": null,
          "kind": "ENUM",
          "description": "Operators to compare against a numeric value"
        },
        {
          "name": "MetaQueryCompareByStringValueOperatorEnum",
          "namespacedName": "MetaQueryCompareByStringValueOperatorEnum",
          "fields": null,
          "kind": "ENUM",
          "description": "Operators to compare against a string value"
        },
        {
          "name": "MetaQueryValueTypesEnum",
          "namespacedName": "MetaQueryValueTypesEnum",
          "fields": null,
          "kind": "ENUM",
          "description": "Custom field type"
        },
        {
          "name": "OperationStatusEnum",
          "namespacedName": "OperationStatusEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "OrderEnum",
          "namespacedName": "OrderEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "RelationEnum",
          "namespacedName": "RelationEnum",
          "fields": null,
          "kind": "ENUM",
          "description": "The logical relationship between array values in query args (for meta query, date parameters, and others) when there is more than one"
        },
        {
          "name": "TaxonomyOrderByEnum",
          "namespacedName": "TaxonomyOrderByEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "TypeKind",
          "namespacedName": "TypeKind",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "UserOrderByEnum",
          "namespacedName": "UserOrderByEnum",
          "fields": null,
          "kind": "ENUM",
          "description": null
        },
        {
          "name": "BlockUnion",
          "namespacedName": "BlockUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Block' types"
        },
        {
          "name": "CategoryUnion",
          "namespacedName": "CategoryUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'category' type resolvers"
        },
        {
          "name": "CustomPostUnion",
          "namespacedName": "CustomPostUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'custom post' type resolvers"
        },
        {
          "name": "RootAddCommentMetaMutationErrorPayloadUnion",
          "namespacedName": "RootAddCommentMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding meta on a comment"
        },
        {
          "name": "RootAddCommentToCustomPostMutationErrorPayloadUnion",
          "namespacedName": "RootAddCommentToCustomPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding a comment to a custom post"
        },
        {
          "name": "RootAddGenericCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootAddGenericCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding meta on a category term"
        },
        {
          "name": "RootAddGenericCustomPostMetaMutationErrorPayloadUnion",
          "namespacedName": "RootAddGenericCustomPostMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding meta on a custom post"
        },
        {
          "name": "RootAddGenericTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootAddGenericTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding meta on a tag term"
        },
        {
          "name": "RootAddPostCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootAddPostCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding meta on a post's category term"
        },
        {
          "name": "RootAddPostTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootAddPostTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding meta on a post's tag term"
        },
        {
          "name": "RootAddUserMetaMutationErrorPayloadUnion",
          "namespacedName": "RootAddUserMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when adding meta on a user"
        },
        {
          "name": "RootCreateCustomPostMutationErrorPayloadUnion",
          "namespacedName": "RootCreateCustomPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when creating a custom post"
        },
        {
          "name": "RootCreateGenericCategoryTermMutationErrorPayloadUnion",
          "namespacedName": "RootCreateGenericCategoryTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when creating a category term"
        },
        {
          "name": "RootCreateGenericTagTermMutationErrorPayloadUnion",
          "namespacedName": "RootCreateGenericTagTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when creating a tag term"
        },
        {
          "name": "RootCreateMediaItemMutationErrorPayloadUnion",
          "namespacedName": "RootCreateMediaItemMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when uploading an attachment"
        },
        {
          "name": "RootCreatePageMutationErrorPayloadUnion",
          "namespacedName": "RootCreatePageMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when creating a page"
        },
        {
          "name": "RootCreatePostCategoryTermMutationErrorPayloadUnion",
          "namespacedName": "RootCreatePostCategoryTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when creating a post category term"
        },
        {
          "name": "RootCreatePostMutationErrorPayloadUnion",
          "namespacedName": "RootCreatePostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when creating a post"
        },
        {
          "name": "RootCreatePostTagTermMutationErrorPayloadUnion",
          "namespacedName": "RootCreatePostTagTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when creating a post tag term"
        },
        {
          "name": "RootDeleteCommentMetaMutationErrorPayloadUnion",
          "namespacedName": "RootDeleteCommentMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting meta on a comment"
        },
        {
          "name": "RootDeleteGenericCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootDeleteGenericCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting meta on a category term"
        },
        {
          "name": "RootDeleteGenericCategoryTermMutationErrorPayloadUnion",
          "namespacedName": "RootDeleteGenericCategoryTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting a category term"
        },
        {
          "name": "RootDeleteGenericCustomPostMetaMutationErrorPayloadUnion",
          "namespacedName": "RootDeleteGenericCustomPostMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting meta on a custom post"
        },
        {
          "name": "RootDeleteGenericTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootDeleteGenericTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting meta on a tag term"
        },
        {
          "name": "RootDeleteGenericTagTermMutationErrorPayloadUnion",
          "namespacedName": "RootDeleteGenericTagTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting a tag term"
        },
        {
          "name": "RootDeletePostCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootDeletePostCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting meta on a post's category term"
        },
        {
          "name": "RootDeletePostCategoryTermMutationErrorPayloadUnion",
          "namespacedName": "RootDeletePostCategoryTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting a post category term"
        },
        {
          "name": "RootDeletePostTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootDeletePostTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting meta on a post's tag term"
        },
        {
          "name": "RootDeletePostTagTermMutationErrorPayloadUnion",
          "namespacedName": "RootDeletePostTagTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting a post tag term"
        },
        {
          "name": "RootDeleteUserMetaMutationErrorPayloadUnion",
          "namespacedName": "RootDeleteUserMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when deleting meta on a user"
        },
        {
          "name": "RootLoginUserMutationErrorPayloadUnion",
          "namespacedName": "RootLoginUserMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when logging a user in"
        },
        {
          "name": "RootLogoutUserMutationErrorPayloadUnion",
          "namespacedName": "RootLogoutUserMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when logging a user out"
        },
        {
          "name": "RootRemoveFeaturedImageFromCustomPostMutationErrorPayloadUnion",
          "namespacedName": "RootRemoveFeaturedImageFromCustomPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when removing a featured image from a custom post"
        },
        {
          "name": "RootReplyCommentMutationErrorPayloadUnion",
          "namespacedName": "RootReplyCommentMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when replying to a comment"
        },
        {
          "name": "RootSetCategoriesOnCustomPostMutationErrorPayloadUnion",
          "namespacedName": "RootSetCategoriesOnCustomPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting categories on a custom post"
        },
        {
          "name": "RootSetCategoriesOnPostMutationErrorPayloadUnion",
          "namespacedName": "RootSetCategoriesOnPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting categories on a post"
        },
        {
          "name": "RootSetCommentMetaMutationErrorPayloadUnion",
          "namespacedName": "RootSetCommentMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting meta on a comment"
        },
        {
          "name": "RootSetFeaturedImageOnCustomPostMutationErrorPayloadUnion",
          "namespacedName": "RootSetFeaturedImageOnCustomPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting a featured image to a custom post"
        },
        {
          "name": "RootSetGenericCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootSetGenericCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting meta on a category term"
        },
        {
          "name": "RootSetGenericCustomPostMetaMutationErrorPayloadUnion",
          "namespacedName": "RootSetGenericCustomPostMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting meta on a custom post"
        },
        {
          "name": "RootSetGenericTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootSetGenericTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting meta on a tag term"
        },
        {
          "name": "RootSetPostCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootSetPostCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting meta on a post's category term"
        },
        {
          "name": "RootSetPostTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootSetPostTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting meta on a post's tag term"
        },
        {
          "name": "RootSetTagsOnCustomPostMutationErrorPayloadUnion",
          "namespacedName": "RootSetTagsOnCustomPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting tags on a custom post"
        },
        {
          "name": "RootSetTagsOnPostMutationErrorPayloadUnion",
          "namespacedName": "RootSetTagsOnPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting tags on a post"
        },
        {
          "name": "RootSetUserMetaMutationErrorPayloadUnion",
          "namespacedName": "RootSetUserMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when setting meta on a user"
        },
        {
          "name": "RootUpdateCommentMetaMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateCommentMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating meta on a comment"
        },
        {
          "name": "RootUpdateCustomPostMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateCustomPostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating a custom post"
        },
        {
          "name": "RootUpdateGenericCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateGenericCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating meta on a category term"
        },
        {
          "name": "RootUpdateGenericCategoryTermMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateGenericCategoryTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating a category term"
        },
        {
          "name": "RootUpdateGenericCustomPostMetaMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateGenericCustomPostMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating meta on a custom post"
        },
        {
          "name": "RootUpdateGenericTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateGenericTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating meta on a tag term"
        },
        {
          "name": "RootUpdateGenericTagTermMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateGenericTagTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating a tag term"
        },
        {
          "name": "RootUpdateMediaItemMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateMediaItemMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating the metadata for an attachment"
        },
        {
          "name": "RootUpdatePageMutationErrorPayloadUnion",
          "namespacedName": "RootUpdatePageMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating a page"
        },
        {
          "name": "RootUpdatePostCategoryTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootUpdatePostCategoryTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating meta on a post's category term"
        },
        {
          "name": "RootUpdatePostCategoryTermMutationErrorPayloadUnion",
          "namespacedName": "RootUpdatePostCategoryTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating a post category term"
        },
        {
          "name": "RootUpdatePostMutationErrorPayloadUnion",
          "namespacedName": "RootUpdatePostMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating a post"
        },
        {
          "name": "RootUpdatePostTagTermMetaMutationErrorPayloadUnion",
          "namespacedName": "RootUpdatePostTagTermMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating meta on a post's tag term"
        },
        {
          "name": "RootUpdatePostTagTermMutationErrorPayloadUnion",
          "namespacedName": "RootUpdatePostTagTermMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating a post tag term"
        },
        {
          "name": "RootUpdateUserMetaMutationErrorPayloadUnion",
          "namespacedName": "RootUpdateUserMetaMutationErrorPayloadUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'Error Payload' types when updating meta on a user"
        },
        {
          "name": "TagUnion",
          "namespacedName": "TagUnion",
          "fields": null,
          "kind": "UNION",
          "description": "Union of 'tag' type resolvers"
        }
      ]
    }
  }
}