####################################################################
# Workflow temporarily disabled because it's too slow:
# At 210 packages, it takes more than 1 hour to complete.
# A better approach would be to have `monorepo-builder package-entries-json`
# only deliver the list of packages that are affected by the PR.
# For instance, if "getpop/root" is modified, everything is tested,
# but if "graphql-api/graphql-api-for-wp" is, then nothing else is tested,
# since nobody else depends on this package
####################################################################
name: Split Tests

on:
    push:
        branches:
            - master
    pull_request: null

env:
    CHECKOUT_SUBMODULES: ""
    # see https://github.com/composer/composer/issues/9368#issuecomment-718112361
    COMPOSER_ROOT_VERSION: "dev-master"

jobs:
    provide_packages_json:
        name: Provide data
        # see json juggling: https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#example-6
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: ${{ env.CHECKOUT_SUBMODULES }}

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   uses: "ramsey/composer-install@v1"

            # git diff to generate matrix with modified packages only
            -   uses: technote-space/get-diff-action@v4
                with:
                    PATTERNS: layers/*/*/*/**

            # get package json list - if filter is empty, don't launch any split
            # Enhancement: produce the packages already, avoid potentially sending thousands of CLI args
            # Steps to process string:
            # 1. remove single quotes
            # 2. Extract 4 first layers only (for package path) and get unique entries
            # 3. Add --filter= in between entries
            -   id: output_data
                name: Calculate matrix for packages
                run: |
                    quote=\'
                    clean_diff="$(echo "${{ env.GIT_DIFF }}" | sed -e s/$quote//g)"
                    packages_in_diff="$(echo $clean_diff | grep -E -o 'layers/[A-Za-z0-9_\-]*/[A-Za-z0-9_\-]*/[A-Za-z0-9_\-]*/' | sort -u)"
                    echo "[Packages in diff] $(echo $packages_in_diff | tr '\n' ' ')"
                    filter_arg="--filter=$(echo $packages_in_diff | sed -e 's/ / \-\-filter=/g')"
                    echo "::set-output name=matrix::$(vendor/bin/monorepo-builder package-entries-json --config=config/monorepo-builder/package-entries-json.php $(echo $filter_arg))"

        outputs:
            matrix: ${{ steps.output_data.outputs.matrix }}

    split_tests:
        needs: provide_packages_json
        if: needs.provide_packages_json.outputs.matrix != '[]'
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                package: ${{ fromJson(needs.provide_packages_json.outputs.matrix)}}

        name: Split Tests of ${{ matrix.package.name }} (${{ matrix.package.path }})

        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: ${{ env.CHECKOUT_SUBMODULES }}

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   uses: "ramsey/composer-install@v1"

            -   run: vendor/bin/monorepo-builder localize-composer-paths --config=config/monorepo-builder/localize-composer-paths.php ${{ matrix.package.path }}/composer.json --ansi

            -   run: composer update --no-progress --ansi --working-dir ${{ matrix.package.path }}

            -
                name: PHPUnit
                working-directory: ${{ matrix.package.path }}
                run: vendor/bin/phpunit

