####################################################################################
# GitHub Action:
# Whenever creating a new release of the source code,
# also create a release of the installable plugin,
# and downgrading it from PHP 8.0 to 7.1 to support more users.
####################################################################################
# Steps to execute:
# - Checkout the source code
# - Run "composer install" for development, to install dependencies for Rector
# - Run Rector to downgrade code from PHP 8.0 to 7.1
# - Run "composer install" for production (required dependencies are already under vendor/)
# - Create a .zip file, excluding:
#   - All hidden files (.git, .gitignore, etc)
#   - Rector file
#   - All development files, ending in .dist
#   - All composer files <= after installing dependencies, no need for them anymore
#   - Markdown files concerning development
#   - Folder build/ <= created only to store the .zip file
#   - Folder dev-helpers/ <= not needed for the plugin
# - Upload the .zip file as an artifact to the action (this step is possibly optional)
# - Upload the .zip file as a release, for download
####################################################################################
name: Generate Installable Plugin, Upload as Artifact, and (maybe) Upload as Release Asset
on:
    release:
        types: [published]
    push:
        branches:
            - master
    pull_request: null

env:
    # see https://github.com/composer/composer/issues/9368#issuecomment-718112361
    COMPOSER_ROOT_VERSION: "dev-master"

jobs:
    provide_data:
        name: Provide configuration to generate plugins
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   uses: "ramsey/composer-install@v1"

            -   id: output_data
                run: |
                    echo "::set-output name=plugin_config_entries::$(vendor/bin/monorepo-builder plugin-config-entries-json)"

        outputs:
            plugin_config_entries: ${{ steps.output_data.outputs.plugin_config_entries }}

    build:
        name: Build plugin and Downgrade its code
        needs: provide_data
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                pluginConfig: ${{ fromJson(needs.provide_data.outputs.plugin_config_entries) }}
        defaults:
            run:
                working-directory: ${{ matrix.pluginConfig.path }}
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            # pcre.jit=0 => @see https://github.com/composer/composer/issues/9595
            -   name: Use PHP 8.0
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                    ini-values: pcre.jit=0
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Install root dependencies
                uses: "ramsey/composer-install@v1"

            # "custom-bump-interdependency" temporarily needed because of bug:
            # https://github.com/symplify/symplify/issues/2773
            -   name: Localize package paths
                run: |
                    vendor/bin/monorepo-builder custom-bump-interdependency "dev-master"
                    vendor/bin/monorepo-builder localize-composer-paths ${{ matrix.pluginConfig.path }}/composer.json --ansi
                working-directory: .

            -   name: Install plugin dependencies, avoiding v2 platform check
                run: |
                    composer config platform-check false --no-interaction --ansi
                    composer install --no-progress --no-interaction --ansi

            -   name: Downgrade code for production (to PHP 7.1)
                run: ../../../Engine/packages/root/ci/downgrade_code.sh rector-downgrade-code.php

            # Hack to fix bug: https://github.com/rectorphp/rector/issues/5962
            -   name: (Hack) Dependencies - Downgrade PHP code via Rector - CacheItem
                run: ../../../../vendor/bin/rector process --config=../../../../rector-downgrade-code-hacks-CacheItem.php --ansi

            -   name: Replace PHP version in plugin main file
                run: |
                    sed -i 's/Requires PHP: 8.0/Requires PHP: 7.1/' graphql-api.php

            -   name: Build project for production
                run: composer install --no-dev --optimize-autoloader --no-progress --no-interaction --ansi

            -   name: Create build folder
                run: mkdir build
                working-directory: .

            # Zipping a folder from a different work dir
            -   name: Install zip
                uses: montudor/action-zip@v0.1.1

            -   name: Create plugin as zip
                run: zip -X -r ../../../../build/downgraded-plugin.zip .

            -   name: Upload job output zip as artifact
                uses: actions/upload-artifact@v2
                with:
                    name: job-assets
                    path: build/downgraded-plugin.zip
                    retention-days: 1

    # Only execute when enabled by configuration
    scope:
        name: Scope plugin
        needs: build
        runs-on: ubuntu-latest
        steps:
            -   name: Download artifact
                uses: actions/download-artifact@v2
                with:
                    name: job-assets
                    path: build

            -   name: Uncompress artifact
                uses: montudor/action-zip@v0.1.0
                with:
                    args: unzip -qq build/downgraded-plugin.zip -d build/downgraded-plugin

            -   name: Install PHP-Scoper
                run: |
                    composer global config minimum-stability dev
                    composer global config prefer-stable true
                    composer global require humbug/php-scoper

            # If the scoped results correspond to vendor/ only, we should do "--output-dir ../prefixed-plugin/vendor"
            -   name: Scope plugin into separate folder
                run: ~/.composer/vendor/bin/php-scoper add-prefix --output-dir ../prefixed-plugin --ansi --no-interaction
                working-directory: build/downgraded-plugin

            # Can't override original files, so also copy them to new folder
            # @see https://github.community/t/how-to-run-actions-checkout-v1-with-sudo-privileges/17436/11
            -   name: Merge scoped + non-scoped plugin code
                run: |
                    mkdir build/scoped-plugin
                    rsync -av build/downgraded-plugin/ build/scoped-plugin/ --quiet
                    rsync -av build/prefixed-plugin/ build/scoped-plugin/ --quiet

            -   name: Regenerate autoloader
                run: composer dumpautoload --optimize --classmap-authoritative --ansi
                working-directory: build/scoped-plugin

            -   name: Use Scoper autoload in plugin main file
                run: |
                    sed -i 's/autoload.php/scoper-autoload.php/' graphql-api.php
                working-directory: build/scoped-plugin

            # Zipping a folder from a different work dir
            -   name: Install zip
                uses: montudor/action-zip@v0.1.1

            -   name: Create plugin as zip
                run: zip -X -r ../scoped-plugin.zip . -x *.git* node_modules/\* .* "*/\.*" *.md phpstan.neon rector-downgrade-code.php rector-test-scoping.php scoper.inc.php *.dist composer.* **/package-lock.json dev-helpers/\* lando/\* docs/images/\* tests/\* **/tests/\*
                working-directory: build/scoped-plugin

            -   name: Upload job output zip as artifact
                uses: actions/upload-artifact@v2
                with:
                    name: job-assets
                    path: build/scoped-plugin.zip
                    retention-days: 1

    # Only execute when doing a release
    upload_final_plugin_as_artifact:
        name: Rename the artifact to the plugin name
        needs: scope
        runs-on: ubuntu-latest
        steps:
            -   name: Download artifact
                uses: actions/download-artifact@v2
                with:
                    name: job-assets
                    path: build

            -   name: Rename artifact to plugin name
                run: mv build/scoped-plugin.zip build/${{ matrix.pluginConfig.zip_file }}

            -   name: Upload final plugin zip as artifact
                uses: actions/upload-artifact@v2
                with:
                    name: generated-plugins
                    path: build/${{ matrix.pluginConfig.zip_file }}
                    retention-days: 1

    # Only execute when doing a release
    upload_and_deploy:
        name: Upload release, and deploy to DIST repo
        needs: upload_final_plugin_as_artifact
        if: github.event_name == 'release'
        runs-on: ubuntu-latest
        steps:
            -   name: Download artifact
                uses: actions/download-artifact@v2
                with:
                    name: generated-plugins
                    path: build

            -   name: Upload to release
                uses: JasonEtco/upload-to-release@master
                with:
                    args: build/${{ matrix.pluginConfig.zip_file }} application/zip
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Uncompress artifact
                uses: montudor/action-zip@v0.1.0
                with:
                    args: unzip -qq build/${{ matrix.pluginConfig.zip_file }} -d build/downgraded-graphql-api-for-wp
            -
                id: previous_tag
                uses: "WyriHaximus/github-action-get-previous-tag@master"

            -   name: Publish to DIST repo
                uses: symplify/monorepo-split-github-action@1.1
                env:
                    GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
                with:
                    branch: 'master'
                    package-directory: 'build/downgraded-graphql-api-for-wp'
                    split-repository-organization: 'GraphQLAPI'
                    split-repository-name: 'graphql-api-for-wp-dist'
                    tag: ${{ steps.previous_tag.outputs.tag }}
                    user-name: "leoloso"
                    user-email: "leo@getpop.org"

