name: Downgrade PHP tests
on:
    push:
        branches:
            - master
    pull_request: null

jobs:
    provide_data:
        name: Provide list of source packages
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   uses: "ramsey/composer-install@v1"

            -   id: output_data
                run: |
                    echo "::set-output name=package_srcs::$(vendor/bin/monorepo-builder source-packages --psr4-only --subfolder=src)"

        outputs:
            package_srcs: ${{ steps.output_data.outputs.package_srcs }}

    main:
        needs: provide_data
        name: Downgrade code to PHP 7.1 via Rector, and execute tests
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

                # see https://github.com/shivammathur/setup-php
            -   name: Set-up PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Install Composer dependencies
                uses: "ramsey/composer-install@v1"

            -   name: Local packages - Downgrade PHP code via Rector
                run: vendor/bin/rector process ${{ needs.provide_data.outputs.package_srcs }} --config=ci/downgrades/rector-downgrade-code.php --ansi

            # Pass param "additional_rector_configs" to fix bug
            # @see https://github.com/rectorphp/rector/issues/5962
            -   name: Dependencies - Downgrade PHP code via Rector
                run: ci/downgrade_code.sh "" "" "" "$(vendor/bin/monorepo-builder additional-downgrade-rector-configs)"

            ################################################################################
            # Run Rector again with --dry-run, check no further downgrades are executed
            # This serves 2 purposes:
            # 1. Make sure that all downgrades were executed, i.e. chained downgrades were executed successfully
            # 2. Check that no buggy code has been produced from running a buggy Rector rule
            #
            # Running Rector a second time takes several minutes, making the CI slow for testing PRs
            # Then, only execute it in the "push" event
            # (it this will seldom throw an error, and only after upgrading the dependencies, mostly Rector itself)
            ################################################################################
            -   name: (Again) Local packages - Downgrade PHP code via Rector
                run: vendor/bin/rector process ${{ needs.provide_data.outputs.package_srcs }} --config=ci/downgrades/rector-downgrade-code.php --ansi --dry-run
                if: github.event_name == 'push'

            -   name: (Again) Dependencies - Downgrade PHP code via Rector
                run: ci/downgrade_code.sh --dry-run "" "" "$(vendor/bin/monorepo-builder additional-downgrade-rector-configs)"
                if: github.event_name == 'push'
            ################################################################################

            # Prepare for testing on PHP 7.1
            -   name: Install PHP Parallel Lint
                run: composer create-project php-parallel-lint/php-parallel-lint php-parallel-lint --ansi

            # Only PROD dependencies must be tested
            # --ignore-platform-reqs to avoid Composer checking the PHP 8.0 requirement
            -   name: Keep dependencies for PROD only (for testing)
                uses: "ramsey/composer-install@v1"
                with:
                    composer-options: "--no-dev --ignore-platform-reqs"

            # Upload artifact with downgraded code, for debugging
            -   name: Create build folder
                run: mkdir build
            -   name: Install zip
                uses: montudor/action-zip@v0.1.1
            -   name: Create zip
                run: zip -X -r build/downgraded-code.zip . -x *.git* build/\* php-parallel-lint/\*
            -   name: Upload artifact
                uses: actions/upload-artifact@v2
                with:
                    name: downgraded-code
                    path: build/downgraded-code.zip
                    retention-days: 1

            -   name: Switch to PHP 7.1
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 7.1
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Test everything, including Composer dependencies which (supposedly)
            # do not require downgrading
            # Use a PHP Linter. If PHP is not valid, it will throw an error
            # Also test all the migrate-* packages, but migrate-everythingelse that
            # should not be part of any project, and DOES contain PHP 8.0 (it's not being downgraded)
            -   name: Run PHP Parallel Lint on PHP 7.1
                run: php-parallel-lint/parallel-lint layers/ vendor/ --exclude layers/Schema/packages/migrate-everythingelse/ --exclude layers/EverythingElse/ --exclude vendor/symfony/polyfill-ctype/bootstrap80.php --exclude vendor/symfony/polyfill-intl-grapheme/bootstrap80.php --exclude vendor/symfony/polyfill-intl-idn/bootstrap80.php --exclude vendor/symfony/polyfill-intl-normalizer/bootstrap80.php --exclude vendor/symfony/polyfill-mbstring/bootstrap80.php


