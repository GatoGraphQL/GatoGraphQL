name: Downgrade PHP tests
on:
    push:
        branches:
            - master
    pull_request: null

jobs:
    provide_data:
        name: Provide list of source packages
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   uses: "ramsey/composer-install@v1"

            -   id: output_data
                run: |
                    echo "::set-output name=package_srcs::$(vendor/bin/monorepo-builder source-packages --psr4-only --subfolder=src)"

        outputs:
            package_srcs: ${{ steps.output_data.outputs.package_srcs }}

    main:
        needs: provide_data
        name: Downgrade code to PHP 7.1 via Rector, and execute tests
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

                # see https://github.com/shivammathur/setup-php
            -   name: Set-up PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.0
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Install Composer dependencies
                uses: "ramsey/composer-install@v1"

            -   name: Local packages - Downgrade PHP code via Rector
                run: vendor/bin/rector process ${{ needs.provide_data.outputs.package_srcs }} --config=rector-downgrade-code.php --ansi

            -   name: Dependencies - Downgrade PHP code via Rector
                run: layers/Engine/packages/root/ci/downgrade_code.sh 7.1 rector-downgrade-code.php

            # Prepare for testing on PHP 7.1
            # Install Rector prefixed global since it conflicts with local packages
            -   name: Install Rector prefixed
                run: composer global require rector/rector-prefixed

            # We need the WordPress stubs for testing (they are installed in DEV)
            # Symfony Cache has "psr/simple-cache" for DEV not PROD, making the static analysis fail
            -   name: Install DEV dependencies needed in PROD (for testing)
                run: composer require php-stubs/wordpress-stubs psr/simple-cache:^1.0

            # Only PROD dependencies must be tested
            -   name: Keep dependencies for PROD only (for testing)
                uses: "ramsey/composer-install@v1"
                with:
                    composer-options: "--no-dev"

            # Executing `composer config platform-check false` throws error:
            # Failed to execute regex: PREG_JIT_STACKLIMIT_ERROR
            # @see https://github.com/leoloso/PoP/pull/304/checks?check_run_id=1668406313#step:4:5
            # Then, just manually delete the platform_check.php file
            -   name: Avoid Composer v2 platform checks
                # run: composer config platform-check false
                run: rm vendor/composer/platform_check.php

            # Upload artifact with downgraded code, for debugging
            -   name: Create build folder
                run: mkdir build
            -   name: Install zip
                uses: montudor/action-zip@v0.1.1
            -   name: Create zip
                run: zip -X -r build/downgraded-code.zip layers/ vendor/
            -   name: Upload artifact
                uses: actions/upload-artifact@v2
                with:
                    name: downgraded-code
                    path: build/downgraded-code.zip
                    retention-days: 3

            -   name: Switch to PHP 7.1
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 7.1
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Test everything, including Composer dependencies which (supposedly)
            # do not require downgrading
            # Applying the same Rector downgrade config is good enough (any Rector would do the job)
            -   name: Run Rector on PHP 7.1
                run: ~/.composer/vendor/rector/rector-prefixed/bin/rector process layers/ vendor/ --config=rector-downgrade-code.php --ansi

