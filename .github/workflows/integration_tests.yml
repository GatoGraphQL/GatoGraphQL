name: Integration tests
on:
    workflow_run:
        workflows: [Generate plugins]
        types:
            - completed
env:
    CHECKOUT_SUBMODULES: ""

jobs:
    main:
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        name: Launch InstaWP instance and execute integration tests against it
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    submodules: ${{ env.CHECKOUT_SUBMODULES }}

            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.1
                    coverage: none
                env:
                    COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   uses: "ramsey/composer-install@v2"

            -   id: output_data
                run: |
                    echo "additional_integration_test_plugins=$(vendor/bin/monorepo-builder additional-integration-test-plugins --config=config/monorepo-builder/additional-integration-test-plugins.php)" >> $GITHUB_OUTPUT
    
            -   name: Retrieve artifact URLs from GitHub workflow
                uses: actions/github-script@v6
                id: artifact-url
                with:
                    script: |
                        const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            run_id: context.payload.workflow_run.id,
                        });
                        // Use Nightly Link as it allows InstaWP to access the artifacts, i.e. without having to be logged-in to GitHub
                        // @see https://nightly.link
                        // Allow installing additional plugins, set via the monorepo configuration
                        const artifactURLs = allArtifacts.data.artifacts.map((artifact) => {
                            return artifact.url.replace('https://api.github.com/repos', 'https://nightly.link') + '.zip'
                        }).concat(${{ steps.output_data.outputs.additional_integration_test_plugins }});
                        return artifactURLs.join(',');
                    result-encoding: string

            -   name: Artifact URL for InstaWP
                run: echo "Artifact URL for InstaWP - ${{ steps.artifact-url.outputs.result }}"
                shell: bash
                
            -   name: Create InstaWP instance
                uses: instawp/wordpress-testing-automation@main
                id: create-instawp
                with:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
                    INSTAWP_TEMPLATE_SLUG: ${{ secrets.INSTAWP_TEMPLATE_SLUG }}
                    REPO_ID: ${{ secrets.INSTAWP_REPO_ID }}
                    INSTAWP_ACTION: create-site-template
                    ARTIFACT_URL: ${{ steps.artifact-url.outputs.result }}

            -   name: InstaWP instance URL
                run: echo "InstaWP instance URL - ${{ steps.create-instawp.outputs.instawp_url }}"
                shell: bash

            -   name: Extract InstaWP domain
                id: extract-instawp-domain                
                run: |
                    instawp_domain="$(echo "${{ steps.create-instawp.outputs.instawp_url }}" | sed -e s#https://##)"
                    echo "::set-output name=instawp-domain::$(echo $instawp_domain)"

            -   name: Sleep a bit to make sure InstaWP is ready
                run: sleep 15s
                shell: bash

            -   name: Run tests
                run: |
                    INTEGRATION_TESTS_WEBSERVER_DOMAIN=${{ steps.extract-instawp-domain.outputs.instawp-domain }} \
                    INTEGRATION_TESTS_AUTHENTICATED_ADMIN_USER_USERNAME=${{ secrets.INSTAWP_ADMIN_USER_USERNAME }} \
                    INTEGRATION_TESTS_AUTHENTICATED_ADMIN_USER_PASSWORD=${{ secrets.INSTAWP_ADMIN_USER_PASSWORD }} \
                    vendor/bin/phpunit --filter=Integration

            -   name: Destroy InstaWP instance
                uses: instawp/wordpress-testing-automation@main
                id: destroy-instawp
                if: ${{ always() }}
                with:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
                    INSTAWP_TEMPLATE_SLUG: ${{ secrets.INSTAWP_TEMPLATE_SLUG }}
                    REPO_ID: ${{ secrets.INSTAWP_REPO_ID }}
                    INSTAWP_ACTION: destroy-site
